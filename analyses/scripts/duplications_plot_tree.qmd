---
title: "Detect chromosomal duplications"
author: "Claudia Zirión-Martínez"
date: "2025-02-13"
---
## Setup

```{r, echo = FALSE, eval =FALSE}
setwd("/FastData/czirion/Crypto_Diversity_Pipeline/analyses/")
```
```{r, output=FALSE}
library(tidyverse)
library(ggtree)
library(ggtreeExtra)
library(ape)
library(ggnewscale)
library(RColorBrewer)
source("scripts/metadata_colors.R")
```
Paths 

```{r}
metadata_path <- "data/processed/metadata_ashton_desj_all_weavepop_H99.csv"
duplications_path <- "results/tables/duplications_putative.tsv" # Change it to final list of duplications when decided
merged_tree_path <- "data/processed/tree_merged.newick"
tree_merged_duplications_path <- "results/trees_dups/tree_merged_duplications.png"
tree_merged_duplications_12_13_path <- "results/trees_dups/tree_merged_duplications_12_13.png"
tree_merged_duplications_only_duplicated <-  "results/trees_dups/tree_merged_duplications_only_duplicated.png"
tree_merged_duplications_only_duplicated2 <- "results/trees_dups/tree_merged_duplications_only_duplicated2.png"
tree_merged_duplications_only_duplicated3 <- "results/trees_dups/tree_merged_duplications_only_duplicated3.png"
```
## Metadata
Load the necessary data
```{r}
metadata <- read.csv(
    metadata_path,
    header = TRUE)
```

Get one dataframe for each variable to be plotted as a separate metadata column in the tree
```{r}
metadata$vni_subdivision <- factor(metadata$vni_subdivision,
                            levels = c("VNIa-4", "VNIa-5", "VNIa-32", 
                            "VNIa-93", "VNIa-X", "VNIa-Y", "VNIb", 
                            "VNIc", "VNIa-outlier"))

sublineage <- metadata %>%
                filter(lineage == "VNI")%>%
                select(strain, vni_subdivision)%>%
                column_to_rownames("strain")%>%
                droplevels()
lineage <- metadata %>%
            select(strain, lineage)%>%
            column_to_rownames("strain")
dataset <- metadata %>%
            select(strain, dataset)%>%
            column_to_rownames("strain")
source <- metadata %>%
            select(strain, source)%>%
            column_to_rownames("strain")
```

## Duplications
```{r}
duplications <- read.delim(
    duplications_path,
    sep = "\t", header = TRUE, stringsAsFactors = TRUE)
```

```{r}
duplications_full <- duplications %>%
    select(strain, chromosome) %>%
    distinct()
```

Make matrix of duplicated chromosomes
```{r}
dup_chroms <- duplications_full %>%
    select(strain, chromosome)%>%
    mutate(duplicated_full = 1)%>%
    arrange(chromosome)%>%
    pivot_wider(names_from = chromosome, values_from = duplicated_full, values_fill = 0)%>%
    column_to_rownames("strain")%>%
    mutate(across(everything(), ~ ifelse(. == 1, cur_column(),"Euploid")))

euploid_strain <- metadata %>%
    filter(!strain %in% duplications_full$strain)%>%
    select(strain)

for (chrom in colnames(dup_chroms)){
    euploid_strain[chrom] <- "Euploid"
}

dup_chroms <- euploid_strain %>%
    column_to_rownames("strain") %>%
    bind_rows(dup_chroms)
```


## Tree
```{r}
tree <- read.tree(merged_tree_path)
```
Remove tips that are not in metadata$strain

```{r}
tree <- drop.tip(tree, setdiff(tree$tip.label, metadata$strain))
```

## Plots

```{r}
chrom_dup_colors <- c(chrom_colors, "Euploid" = "grey93")
```

### Tree of all samples with duplications of all chromosomes

```{r, message=FALSE, warning=FALSE, echo=FALSE}
#| fig-height: 7
#| fig-width: 7
#| fig-align: center
m <- ggtree(tree, layout = "circular", size = 0.1, branch.length = "none") +  
        geom_tiplab(aes(label = label), size = 0.5, align =TRUE, 
                    linetype = "dashed", linesize = .03)

m1 <- gheatmap(m, dataset, width=.05, colnames=FALSE, offset=2) +
            scale_fill_manual(values = dataset_colors, name="Dataset", na.translate = FALSE)+
            guides(fill = guide_legend(order = 1))+
            new_scale_fill()

m2 <- gheatmap(m1, lineage, width=.05, colnames=FALSE, offset=4) +
            scale_fill_manual(values = lineage_colors, name="Lineage", na.translate = FALSE)+
            guides(fill = guide_legend(order = 2))+
            new_scale_fill()

m3 <- gheatmap(m2, sublineage, width=.05, colnames=FALSE, offset=6) +
            scale_fill_manual(values = sublineage_colors,
                name="VNI Sublineage",
                na.translate = FALSE,
                limits = levels(sublineage$vni_subdivision))+
            guides(fill = guide_legend(order = 3))+
            new_scale_fill()

m4 <- gheatmap(m3, source, width=.05, colnames=FALSE, offset=8) +
        scale_fill_manual(values = source_colors, name="Source", na.translate = FALSE)+
        guides(fill = guide_legend(order = 4))+
        new_scale_fill()

m5 <- gheatmap(m4, dup_chroms, width=.32, colnames = FALSE, offset=11,) +
    scale_fill_manual(values = chrom_dup_colors, name="Duplicated\nchromosomes", na.translate = FALSE )+
    guides(fill = guide_legend(order = 5))+
    theme(legend.position = "right",
        legend.direction = "vertical",
        legend.title = element_text(size=9),
        legend.text=element_text(size=7),
        legend.key.size = unit(0.3, "cm"),
        plot.margin = margin(0, 0, 0, 0, "cm"))
m5
```

```{r, eval=FALSE, echo=FALSE}
ggsave(tree_merged_duplications_path, p5, height = 7, width = 7, units = "in", dpi = 900)
```

### Tree of all samples with duplications of chromosomes 12 and 13

Subset the duplications_full data frame to only include strains with duplications of chromosomes 12 and 13

```{r}
dup_chroms_12_13 <- dup_chroms %>%
    select(chr12, chr13)
```
```{r, message=FALSE, warning=FALSE, echo=FALSE}
#| fig-height: 5
#| fig-width: 7
#| fig-align: center
p5 <- gheatmap(m4, dup_chroms_12_13, width=.1, colnames = FALSE, offset=11,) +
    scale_fill_manual(values = chrom_dup_colors, name="Duplicated\nchromosomes", na.translate = FALSE )+
    guides(fill = guide_legend(order = 5))+
    theme(legend.position = "right",
        legend.direction = "vertical",
        legend.title = element_text(size=9),
        legend.text=element_text(size=7),
        legend.key.size = unit(0.3, "cm"),
        plot.margin = margin(0, 0, 0, 0, "cm"))
p5
```

```{r, echo=FALSE, eval=FALSE}
ggsave(tree_merged_duplications_12_13_path, p5, height = 7, width = 7, units = "in", dpi = 900)
```

### Tree with only the samples that have duplications and the references

```{r}
keep_strains <- c(levels(duplications_full$strain), "H99", "Bt22", "Bt81")
tree_dups <- drop.tip(tree, setdiff(tree$tip.label, keep_strains))
sublineage <- sublineage %>%
                filter(rownames(.) %in% keep_strains)%>%
                droplevels()
```

#### Dataset, lineage, sublineage, source, duplications
```{r, message=FALSE, warning=FALSE, echo=FALSE}
#| fig-height: 7
#| fig-width: 9
#| fig-align: center
p <- ggtree(tree_dups, layout = "rectangular", size = 0.5, branch.length = "none") + 
    geom_tiplab(aes(label = label), size = 3, align =TRUE, 
                    linetype = "dashed", linesize = 0.1, offset = 1)

p1 <- gheatmap(p, dataset, width=0.1, colnames=FALSE, offset=8) +
    scale_fill_manual(values = dataset_colors, name="Dataset", na.translate = FALSE)+
    guides(fill = guide_legend(order = 1))+
    new_scale_fill()

p2 <- gheatmap(p1, lineage, width=0.1, colnames=FALSE, offset=9.5) +
    scale_fill_manual(values = lineage_colors, name="Lineage", na.translate = FALSE)+
    guides(fill = guide_legend(order = 2))+
    new_scale_fill()

p3 <- gheatmap(p2, sublineage, width=0.1, colnames=FALSE, offset=11) +
    scale_fill_manual(values = sublineage_colors,
        name="VNI Sublineage", na.translate = FALSE,
        limits = levels(sublineage$vni_subdivision))+
    guides(fill = guide_legend(order = 3))+
    new_scale_fill()

p4 <- gheatmap(p3, source, width=0.1, colnames=FALSE, offset=12.5) +
        scale_fill_manual(values = source_colors, name="Source", na.translate = FALSE)+
        guides(fill = guide_legend(order = 4))+
        new_scale_fill()

p5 <- gheatmap(p4, dup_chroms, width=0.7, colnames = FALSE, offset=14) +
    scale_fill_manual(values = chrom_dup_colors, name="Duplicated\nchromosomes", na.translate = FALSE )+
    guides(fill = guide_legend(order = 5))+
    theme(legend.position = "right",
        legend.direction = "vertical",
        legend.title = element_text(size=9),
        legend.text=element_text(size=7),
        legend.key.size = unit(0.3, "cm"))
p5
```

```{r, echo=FALSE, eval=FALSE}
ggsave(tree_merged_duplications_only_duplicated, p5, height = 7, width = 9, units = "in", dpi = 900)
```

#### Lineage, sublineage, duplications

```{r, message=FALSE, warning=FALSE, echo=FALSE}
#| fig-height: 7
#| fig-width: 9
#| fig-align: center
p <- ggtree(tree_dups, layout = "rectangular", size = 0.5, branch.length = "none") + 
    geom_tiplab(aes(label = label), size = 3, align =TRUE, 
                    linetype = "dashed", linesize = 0.1, offset = 1)
p1 <- gheatmap(p, lineage, width=0.1, colnames=FALSE, offset=8) +
    scale_fill_manual(values = lineage_colors, name="Lineage", na.translate = FALSE)+
    guides(fill = guide_legend(order = 2))+
    new_scale_fill()

p2 <- gheatmap(p1, sublineage, width=0.1, colnames=FALSE, offset=10) +
    scale_fill_manual(values = sublineage_colors,
        name="VNI Sublineage", na.translate = FALSE,
        limits = levels(sublineage$vni_subdivision))+
    guides(fill = guide_legend(order = 3))+
    new_scale_fill()

p3 <- gheatmap(p2, dup_chroms, width=0.7, colnames = FALSE, offset=12) +
    scale_fill_manual(values = chrom_dup_colors, name="Duplicated\nchromosomes", na.translate = FALSE )+
    guides(fill = guide_legend(order = 5))+
    theme(legend.position = "right",
        legend.direction = "vertical",
        legend.title = element_text(size=9),
        legend.text=element_text(size=7),
        legend.key.size = unit(0.3, "cm"))
p3
```

```{r, echo=FALSE, eval=FALSE}
ggsave(tree_merged_duplications_only_duplicated2, p3, height = 7, width = 9, units = "in", dpi = 900)
```

#### Lineage, duplications, sublineage

```{r, message=FALSE, warning=FALSE, echo=FALSE}
#| fig-height: 7
#| fig-width: 9
#| fig-align: center
p <- ggtree(tree_dups, layout = "rectangular", size = 0.5, branch.length = "none") + 
    geom_tiplab(aes(label = label), size = 3, align =TRUE, 
                    linetype = "dashed", linesize = 0.1, offset = 1)

p1 <- gheatmap(p, lineage, width=0.1, colnames=FALSE, offset=8) +
    scale_fill_manual(values = lineage_colors, name="Lineage", na.translate = FALSE)+
    guides(fill = guide_legend(order = 2))+
    new_scale_fill()

p2 <- gheatmap(p1, dup_chroms, width=0.7, colnames = FALSE, offset=10) +
    scale_fill_manual(values = chrom_dup_colors, name="Duplicated\nchromosomes", na.translate = FALSE )+
    guides(fill = guide_legend(order = 2))+
    new_scale_fill()

p3 <- gheatmap(p2, sublineage, width=0.1, colnames=FALSE, offset=19.5) +
    scale_fill_manual(values = sublineage_colors,
        name="VNI Sublineage", na.translate = FALSE,
        limits = levels(sublineage$vni_subdivision))+
    guides(fill = guide_legend(order = 3))+
    theme(legend.position = "right",
        legend.direction = "vertical",
        legend.title = element_text(size=9),
        legend.text=element_text(size=7),
        legend.key.size = unit(0.3, "cm"))
p3
```

```{r, echo=FALSE, eval=FALSE}
ggsave(tree_merged_duplications_only_duplicated3, p3, height = 7, width = 9, units = "in", dpi = 900)
```