---
title: "Ploidy detection with read depth"
author: "Claudia Zirión-Martínez"
date: "2025-03-13"
---

## Setup

```{r, echo = FALSE, eval = FALSE}
setwd("/FastData/czirion/WeavePop_Cneoformans/analyses/")
```
```{r, output=FALSE}
library(tidyverse)
library(mixtools)
library(patchwork)
library(ggrepel)
library(ggnewscale)
```
Paths
```{r}
duplications_path <- 
    "results/tables/duplications_putative.tsv"
components_path_prefix <- 
    "results/tables/components_"
```
```{r, output=FALSE}
duplications <- read_delim(duplications_path,
                            delim = "\t")
samples <- unique(duplications$sample)
```

```{r, output=FALSE}
components_list <- list()
for (sample in samples){
path <- paste(components_path_prefix, sample, ".tsv", sep = "")
components_list[[sample]] <- read_delim(path, delim = "\t")
}
components <- bind_rows(components_list)
```

### Filter out components with small weight
```{r}
threshold_weight <- 0.2
```
```{r}
large_components <- components %>%
    filter(weight > threshold_weight)
```

#### Plot the mean of large components with reference fractions for each ploidy
```{r}
haploid <- c(0,1,2,3,4)
names(haploid) <- c("0","1/1","2/1","3/1","4/1")
diploid <- c(0,1/2,2/2,3/2,4/2)
names(diploid) <- c("0","1/2","2/2","3/2","4/2")
triploid <- c(0,1/3,2/3,3/3,4/3,5/3,6/3)
names(triploid) <- c("0","1/3","2/3","3/3","4/3","5/3","6/3")
tetraploid <- c(0,1/4,2/4,3/4,4/4,5/4,6/4,7/4,8/4)
names(tetraploid) <- c("0","1/4","2/4","3/4","4/4","5/4","6/4","7/4","8/4")

ploidy <- list(haploid = haploid, 
                diploid = diploid,
                triploid = triploid,
                tetraploid = tetraploid)

```
```{r}
#| fig.height: 11
#| fig.width: 7
ggplot(large_components)+
    geom_vline(xintercept = seq(0,max(large_components$mean), by = 1), color = "black", linetype = "solid") + 
    scale_x_continuous(breaks = ploidy$haploid,
                       labels = names(ploidy$haploid))+
    geom_point(aes(x = mean, y = sample, color = weight))+
    scale_color_viridis_c(direction = -1)+
    theme_classic()+
    theme(panel.grid.major = element_line(color = "gray", linetype = "dashed"))+
    labs(title = "Mean of large components per sample",
        subtitle = "Haploid reference values")
```

```{r}
#| fig.height: 11
#| fig.width: 7
ggplot(large_components)+
    geom_vline(xintercept = seq(0,max(large_components$mean), by = 1/2), color = "black", linetype = "solid") +    scale_x_continuous(breaks = ploidy$diploid,
                       labels = names(ploidy$diploid))+
    geom_point(aes(x = mean, y = sample, color = weight))+
    scale_color_viridis_c(direction = -1)+
    theme_classic()+
    theme(panel.grid.major = element_line(color = "gray", linetype = "dashed"))+
    labs(title = "Mean of large components per sample",
        subtitle = "Diploid reference values")
```
```{r}
#| fig.height: 11
#| fig.width: 7
ggplot(large_components)+
    geom_vline(xintercept = seq(0,max(large_components$mean), by = 1/3), color = "black", linetype = "solid") +    scale_x_continuous(breaks = ploidy$triploid,
                       labels = names(ploidy$triploid))+
    geom_point(aes(x = mean, y = sample, color = weight))+
    scale_color_viridis_c(direction = -1)+
    theme_classic()+
    theme(panel.grid.major = element_line(color = "gray", linetype = "dashed"))+
    labs(title = "Mean of large components per sample",
        subtitle = "Triploid reference values")
```
```{r}
#| fig.height: 11
#| fig.width: 7
ggplot(large_components)+
    geom_vline(xintercept = seq(0,max(large_components$mean), by = 1/4), color = "black", linetype = "solid") +
    scale_x_continuous(breaks = ploidy$tetraploid,
                       labels = names(ploidy$tetraploid))+
    geom_point(aes(x = mean, y = sample, color = weight))+
    scale_color_viridis_c(direction = -1)+
    theme_classic()+
    theme(panel.grid.major = element_line(color = "gray", linetype = "dashed"))+
    labs(title = "Mean of large components per sample",
        subtitle = "Tetraploid reference values")
```