---
title: "Simulation of expectation of depth vs CNV coverage"
author: "Claudia Zirión-Martínez"
date: "2025-05-07"

fig-height: 7
fig-width: 9

format: 
  html:
    page-layout: full
---


## Setup {#setup}

```{r, eval=FALSE, echo=FALSE}
setwd("/FastData/czirion/WeavePop_Cneoformans/analyses")
```

Libraries

```{r libraries, output=FALSE}
library(tidyverse)
library(patchwork)
library(ggbeeswarm)
library(ggnewscale)
library(RColorBrewer)
library(hexbin)
library(ggExtra)
library(ggrepel)
library(truncnorm)
```

```{r}
stdev = 0.3
```

### Distribution of a simulated chromosome

100% Single-copy
```{r}
df <- data.frame(window_depth = c(rtruncnorm(n = 0, a = 0, mean = 0, sd = stdev),
                                            rnorm(100000, mean = 1, sd = stdev), 
                                            rnorm(0, mean = 2, sd = stdev)))
med <- median(df$window_depth)

ggplot(df)+
    geom_density(aes(window_depth))+
    geom_vline(aes(xintercept = med), color = "blue")
```

10% Deletion, 10% Duplication, 80% Single-copy
```{r}
df <- data.frame(window_depth = c(rtruncnorm(n = 10000, a = 0, mean = 0, sd = stdev),
                                            rnorm(80000, mean = 1, sd = stdev), 
                                            rnorm(10000, mean = 2, sd = stdev)))
med <- median(df$window_depth)

ggplot(df)+
    geom_density(aes(window_depth))+
    geom_vline(aes(xintercept = med), color = "blue")
```
10% Deletion, 40% Duplication, 50% Single-copy
```{r}
df <- data.frame(window_depth = c(rtruncnorm(n = 10000, a = 0, mean = 0, sd = stdev),
                                            rnorm(50000, mean = 1, sd = stdev), 
                                            rnorm(40000, mean = 2, sd = stdev)))
med <- median(df$window_depth)

ggplot(df)+
    geom_density(aes(window_depth))+
    geom_vline(aes(xintercept = med), color = "blue")
```

10% Deletion, 90% Duplication, 0% Single-copy
```{r}
df <- data.frame(window_depth = c(rtruncnorm(n = 10000, a = 0, mean = 0, sd = stdev),
                                            rnorm(0, mean = 1, sd = stdev), 
                                            rnorm(90000, mean = 2, sd = stdev)))
med <- median(df$window_depth)

ggplot(df)+
    geom_density(aes(window_depth))+
    geom_vline(aes(xintercept = med), color = "blue")
```

### Simulate all proportions
```{r}
n <- 100000

p <- data.frame(p_del = c(rep(seq(0,100, by = 5), each = 100)),
                p_sc  = c(rep(seq(0,100, by = 5), 100)))%>%
    mutate(sum = p_del + p_sc)%>%
    filter(sum <= 100)%>%
    distinct()
               
sample_summary <- p %>%
        mutate(p_dup = 100 - p_del - p_sc,
                n_del = p_del * n / 100,
                n_sc = p_sc * n  / 100,
                n_dup = p_dup * n  / 100)%>%
        rowwise()%>%
        mutate(median_depth = median(c(rtruncnorm(n = n_del, a = 0, mean = 0, sd = stdev),
                                 rnorm(n_sc, mean = 1, sd = stdev), 
                                 rnorm(n_dup, mean = 2, sd = stdev))),
                mean_depth = mean(c(rtruncnorm(n = n_del, a = 0, mean = 0, sd = stdev),
                                 rnorm(n_sc, mean = 1, sd = stdev), 
                                 rnorm(n_dup, mean = 2, sd = stdev))))%>%
        select(p_del,p_sc,p_dup, median_depth, mean_depth)%>%
        mutate(category = paste(p_del,p_sc,p_dup, sep = "_"),
                dup_filter = ifelse(p_dup >= 50, "half_duplication", "small_duplication"),
                del_filter = ifelse(p_del >= 50, "half_deletion", "small_deletion"))
```
### Duplications
```{r}
ggplot(sample_summary, aes(x= p_dup, y = median_depth, color = p_del))+
    geom_point()+
    geom_hline(yintercept = c(1, 2), color = "black", linetype = "solid") +
    scale_x_continuous(limits = c(0,100))+
    scale_y_continuous(limits = c(0,3))+
    theme_minimal()+
    theme(legend.position = "bottom")+
    scale_color_viridis_c()
```

```{r}
ggplot()+
    geom_line(data = filter(sample_summary, p_del == 5), aes(x= p_dup, y = median_depth), linewidth = 2)+
    geom_hline(yintercept = c(1, 2), color = "gray", linetype = "solid") +
    scale_x_continuous(limits = c(0,100))+
    scale_y_continuous(limits = c(0,3))+
    theme_minimal()+
    theme(legend.position = "bottom")
```

### Deletions
```{r}
ggplot(sample_summary, aes(x= p_del, y = median_depth, color = p_dup))+
    geom_point()+
    geom_hline(yintercept = c(1, 2), color = "black", linetype = "solid") +
    scale_x_continuous(limits = c(0,100))+
    scale_y_continuous(limits = c(0,3))+
    theme_minimal()+
    theme(legend.position = "bottom")+
    scale_color_viridis_c()
```
```{r}
ggplot()+
    geom_line(data = filter(sample_summary, p_dup == 5), aes(x= p_del, y = median_depth), linewidth = 2)+
    geom_hline(yintercept = c(1, 2), color = "gray", linetype = "solid") +
    scale_x_continuous(limits = c(0,100))+
    scale_y_continuous(limits = c(0,3))+
    theme_minimal()+
    theme(legend.position = "bottom")
```

