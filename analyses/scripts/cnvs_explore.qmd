---
title: "Explore called duplications"
author: "Claudia Zirión-Martínez"
date: "2025-02-13"

fig-height: 7
fig-width: 9
---
## Index

- [Setup](#setup)
- [Prepare dataset](#prepare-dataset)
    - [Metadata](#metadata)
    - [Chromosome names and length](#chromosome-names-and-length)
    - [Called CNVs](#called-cnvs)
- [Explore Called CNVs](#explore-called-cnvs)
    - [Distribution of Normalized Depth and Smooth Normalized Depth](#distribution-of-normalized-depth-and-smooth-normalized-depth)
    - [Distribution of Sizes of CNVs](#distribution-of-sizes-of-cnvs)
    - [Depth vs. Size](#depth-vs-size)
- [Explore repeats](#explore-repeats)
- [Explore called duplications dCNVs](#explore-called-duplications-dcnvs)
- [Metrics per chromosome](#metrics-per-chromosome)
    - [Join metrics from CNVs and depth of chromosome](#join-metrics-from-cnvs-and-depth-of-chromosome)
    - [Summarize the metrics of the called CNVs per chromosome](#summarize-the-metrics-of-the-called-cnvs-per-chromosome)
    - [Explore relationship between CNV chromosomal metrics](#explore-relationship-between-cnv-chromosomal-metrics)
    - [Explore metrics of median depth of chromosomes](#explore-metrics-of-median-depth-of-chromosomes)
- [Compare metrics of dCNVs with chromosome depth](#compare-metrics-of-dcnvs-with-chromosome-depth)
- [Explore putative duplicated chromosomes](#explore-putative-duplicated-chromosomes)
    - [Explore sample with very large Median Depth of Chromosome](#explore-sample-with-very-large-median-depth-of-chromosome)

## Setup

```{r, eval=FALSE, echo=FALSE}
setwd("/FastData/czirion/WeavePop_Cneoformans/analyses/")
```
Libraries
```{r, output=FALSE}
library(tidyverse)
library(patchwork)
library(ggbeeswarm)
library(ggnewscale)
library(RColorBrewer)
```
Paths
```{r}
metadata_path <-
    "data/processed/metadata_ashton_desj_all_weavepop_H99.csv"
chromosomes_path <-
    "../Crypto_Desjardins_Ashton/results_clean/02.Dataset/chromosomes.csv"
chrom_lengths_path <-
    "data/processed/chromosome_lengths.tsv"
depth_by_chrom_good_desj_path <-
    "../Crypto_Desjardins/results_clean/04.Intermediate_files/02.Dataset/depth_quality/depth_by_chrom_good.tsv"
depth_by_chrom_good_ashton_path <-
    "../Crypto_Ashton/results_clean/04.Intermediate_files/02.Dataset/depth_quality/depth_by_chrom_good.tsv"
cnv_calls_path <-
    "../Crypto_Desjardins_Ashton/results_clean/02.Dataset/cnv/cnv_calls.tsv"
duplications_out_path <-
    "results/tables/duplications_putative.tsv"
repeats_path_prefix <-
    "../Crypto_Desjardins/results_clean/03.References/"
```

## Prepare dataset

### Metadata

Use the metadata table that has all the samples included in the final Crypto_Desjardins_Ashton dataset (n = 1055) and H99.  
Select needed columns, remove H99 and get the number of samples per dataset and lineage, per lineage, and total.

```{r, message=FALSE, warning=FALSE}
metadata <- read.delim(
    metadata_path,
    header=TRUE,
    sep=",",
    stringsAsFactor = TRUE)
metadata <- metadata %>%
    select(sample, strain, source, lineage, dataset, vni_subdivision)%>%
    filter(!strain == "H99") %>%
    group_by(dataset, lineage)%>%
    mutate(samples_in_dataset_lineage = n_distinct(sample))%>%
    ungroup() %>%
    group_by(lineage)%>%
    mutate(samples_in_lineage = n_distinct(sample))%>%
    ungroup()%>%
    mutate(total_samples = n_distinct(sample))%>%
    droplevels()
```

### Chromosome names and length

Get the nice chromosome names from the chromosomes file in WeavePop.
```{r}
chromosome_names = read.delim(
    chromosomes_path,
    header=TRUE, sep=",")
chromosome_names <- chromosome_names %>%
    mutate(chromosome = str_pad(chromosome, 2, pad = "0"))%>%
    mutate(chromosome = as.factor(chromosome))
levels(chromosome_names$chromosome) <- paste("chr", chromosome_names$chromosome, sep="")
```

Get the chromosome lengths. 
Create the file with bash.
```{bash, eval=FALSE}
# /usr/bin/bash
tail -n +2 ../Crypto_Desjardins/config/chromosomes.csv | \
    cut -d',' -f1 | sort | uniq | while read line 
do
seqkit fx2tab ../Crypto_Desjardins/data/references/$line.fasta -l -i -n >> data/processed/chromosome_lengths.tsv
done
```
```{r}
chromosome_lengths = read.delim(
    chrom_lengths_path,
    header=FALSE, 
    col.names=c("accession", "length"), 
    sep="\t")
```

### Called CNVs

Import the file with all called CNVs and add the chromosome names.
```{r}
cnv_calls <- read.delim(
    cnv_calls_path, 
    header=TRUE, sep="\t")%>%
    left_join(chromosome_names, by="accession")
```
```{r}
depth_threshold <- 0.6
del_threshold <- 1 - depth_threshold
dup_threshold <- 1 + depth_threshold
```
## Explore Called CNVs

The **Normalized depth** (`norm_depth`) is the median of the normalized mean depth of the windows that are part of the CNV region.
The **Smooth normalized depth** (`smooth_depth`) is the median of the smooth normalized mean depth of the windows that are part of the CNV region.  

### Distribution of Normalized Depth and Smooth Normalized Depth
```{r}
#| fig.height: 7
#| fig.width: 7
d <- ggplot(cnv_calls, aes(norm_depth, fill = cnv)) +
            facet_wrap(~cnv, ncol = 1)+
            geom_histogram(binwidth = 0.1)+
            scale_y_log10(labels = scales::comma) +
            theme_minimal() +
            theme(legend.position = "none")+
            labs(title = "Histogram of Normalized Depth",
            y = "Count (Log 10)",
            x = "Normalized Depth")
s <- ggplot(cnv_calls, aes(smooth_depth, fill = cnv)) +
            facet_wrap(~cnv, ncol = 1)+
            geom_histogram(binwidth = 0.1)+
            scale_y_log10(labels = scales::comma) +
            theme_minimal() +
            theme(legend.position = "none")+
            labs(title = "Histogram of Smooth Normalized Depth",
            y = "Count (Log 10)",
            x = "Smooth Normalized Depth")

d | s
```
There are CNVs with extremely high normalized depth. I will truncate the normalized depth to 5.
```{r}
#| fig.height: 7
#| fig.width: 7
d <- ggplot(cnv_calls, aes(norm_depth, fill = cnv)) +
            facet_wrap(~cnv, ncol = 1)+
            geom_histogram(binwidth = 0.01)+
            geom_vline(xintercept = del_threshold)+
            geom_vline(xintercept = dup_threshold)+
            scale_y_log10(labels = scales::comma) +
            xlim(0,5)+
            theme_minimal() +
            theme(legend.position = "none")+
            labs(title = "Histogram of Normalized Depth",
            subtitle = paste("Lines in depth threshold:", depth_threshold),
            y = "Count (Log 10)",
            x = "Normalized Depth (truncated)")
s <- ggplot(cnv_calls, aes(smooth_depth, fill = cnv)) +
            facet_wrap(~cnv, ncol = 1)+
            geom_histogram(binwidth = 0.01)+
            geom_vline(xintercept = del_threshold)+
            geom_vline(xintercept = dup_threshold)+
            scale_y_log10(labels = scales::comma) +
            xlim(0,5)+
            theme_minimal() +
            theme(legend.position = "none")+
            labs(title = "Histogram of Smooth Normalized Depth",
            subtitle = paste("Lines in depth threshold:", depth_threshold),
            y = "Count (Log 10)",
            x = "Smooth Normalized Depth (truncated)")

d | s
```
### Distribution of Sizes of CNVs

```{r}
#| fig.height: 7
#| fig.width: 7
d <- ggplot(cnv_calls, aes(region_size, fill = cnv)) +
            facet_wrap(~cnv, ncol = 1)+
            geom_histogram(binwidth = 1000)+
            scale_x_continuous(labels = scales::comma)+
            scale_y_log10(labels = scales::comma) +
            theme_minimal() +
            theme(legend.position = "none")+
            labs(title = "Histogram of Sizes of CNVs",
                subtitle = paste("Binwidth: 1000\nLength of largest chromosome", scales::comma(max(chromosome_lengths$length))),
                y = "Count (Log10)",
                x = "Size of CNVs")

d 
```

### Depth vs. Size

```{r}
#| fig.height: 7
#| fig.width: 7
d <- ggplot(cnv_calls, aes(x = region_size, y = norm_depth, color = cnv)) +
        facet_wrap(~cnv, ncol = 1)+
        geom_point()+
        scale_x_continuous(labels = scales::comma)+
        ylim(0,5)+
        theme_minimal() +
        theme(legend.position = "none")+
        labs(title = "Normalized Depth vs CNV Size",
            y = "Normalized Depth (truncated)",
            x = "CNV Size")
s <- ggplot(cnv_calls, aes(x = region_size, y = smooth_depth, color = cnv)) +
        geom_point()+
        scale_x_continuous(labels = scales::comma)+
        ylim(0,5)+
        theme_minimal() +
        theme(legend.position = "none")+
        labs(title = "Smooth Normalized Depth vs CNV Size",
            y = "Smooth Normalized Depth (truncated)",
            x = "CNV Size")
d | s
```

Many small CNVs have very high smooth depth
```{r}
#| fig.height: 7
#| fig.width: 7
ggplot(cnv_calls, aes(x = region_size, y = smooth_depth, color = repeat_fraction)) +
        geom_point()+
        ylim(0,5)+
        scale_x_continuous(labels = scales::comma)+
        scale_color_distiller(limits =c(0,1))+
        theme_minimal() +
        theme(legend.position = "bottom")+
        labs(title = "Smooth Normalized Depth vs Size",
        y = "Smooth Normalized Depth",
        x = "Size")
```

```{r}
repeat_threshold <- 0.2
```
```{r}
#| fig.height: 7
#| fig.width: 7
ggplot(filter(cnv_calls, repeat_fraction < repeat_threshold), aes(x = region_size, y = smooth_depth, color = repeat_fraction)) +
        geom_point()+
        ylim(0,5)+
        scale_x_continuous(labels = scales::comma)+
        scale_color_distiller(limits =c(0,1))+
        theme_minimal() +
        theme(legend.position = "bottom")+
        labs(title = "Smooth Normalized Depth vs Size (filtering out highly repetititve)",
        y = "Smooth Normalized Depth",
        x = "Size")
```
The small CNVs are the ones that usually have very high normalized depths, even when they are not very repetititve.

```{r}
#| fig.height: 7
#| fig.width: 7
ggplot(cnv_calls, aes(x = repeat_fraction, y = norm_depth), alpha = 0.1) +
        geom_quasirandom()+
        ylim(0,5)+
        theme_minimal() +
        theme(legend.position = "bottom")+
        labs(title = "Normalized Depth vs Repeat Fraction (truncated y axis)",
        y = "Normalized Depth",
        x = "Repeat Fraction")
```
```{r}
#| fig.height: 7
#| fig.width: 7
ggplot(cnv_calls, aes(y = smooth_depth, x = norm_depth, color = repeat_fraction)) +
        geom_point()+
        theme_minimal() +
        theme(legend.position = "bottom")+
        labs(title = "Smooth Normalized Depth vs. Normalized Depth",
        x = "Normalized Depth",
        y = "Smooth Normalized Depth")
```
```{r}
#| fig.height: 7
#| fig.width: 7
ggplot(cnv_calls, aes(y = smooth_depth, x = norm_depth, color = repeat_fraction)) +
        geom_point()+
        xlim(0,5)+
        ylim(0,5)+
        theme_minimal() +
        theme(legend.position = "bottom")+
        labs(title = "Smooth Normalized Depth vs. Normalized Depth (truncated X and Y axis)",
        x = "Normalized Depth",
        y = "Smooth Normalized Depth")
```
The 

Remove CNVs that have a repeat fraction above a threshold
```{r, fold-code=FALSE}
repeat_fraction_threshold = 0.3
```
```{r}
cnv_calls_no_repetitive <- cnv_calls %>%
    filter(repeat_fraction < repeat_fraction_threshold)
```
```{r}
#| fig.height: 7
#| fig.width: 7
ggplot(cnv_calls_no_repetitive, aes(y = smooth_depth, x = norm_depth, color = repeat_fraction)) +
        geom_point()+
        theme_minimal() +
        theme(legend.position = "bottom")+
        labs(title = "Smooth Normalized Depth vs. Normalized Depth",
        x = "Normalized Depth",
        y = "Smooth Normalized Depth")
```
```{r}
#| fig.height: 7
#| fig.width: 7
ggplot(cnv_calls_no_repetitive, aes(y = smooth_depth, x = norm_depth, color = repeat_fraction)) +
        geom_point()+
        xlim(0,5)+
        ylim(0,5)+
        theme_minimal() +
        theme(legend.position = "bottom")+
        labs(title = "Smooth Normalized Depth vs. Normalized Depth (truncated X and Y axis)",
        x = "Normalized Depth",
        y = "Smooth Normalized Depth")
```

```{r}
#| fig.height: 7
#| fig.width: 7
ggplot(cnv_calls_no_repetitive, aes(y = smooth_depth, x = norm_depth, color = region_size)) +
        geom_point()+
        scale_color_viridis_c(trans = "log10", name = "Region Size\n(log scale)", labels = scales::comma) +
        xlim(0,5)+
        ylim(0,5)+
        theme_minimal() +
        theme(legend.position = "right")+
        labs(title = "Smooth Normalized Depth vs. Normalized Depth (truncated X and Y axis)",
        x = "Normalized Depth",
        y = "Smooth Normalized Depth")
```
In the larger CNVs the Normalized Depth and Smooth Normalized Depth are more similar.

## Explore distribution of CNV groups

```{r}
cnv_groups <- cnv_calls_no_repetitive %>%
    group_by(lineage, chromosome, start, end, region_size) %>%
    summarize(max_norm_depth = max(norm_depth),
              norm_depth = median(norm_depth),
              smooth_depth = median(smooth_depth),
              n = n())
```

```{r}
#| fig.height: 7
#| fig.width: 7
ggplot(cnv_groups, aes(x = region_size, y = norm_depth, size = n)) +
        geom_point()+
        theme_minimal() +
        theme(legend.position = "bottom")+
        labs(title = "Normalized Depth vs CNV Size",
        y = "Normalized Depth",
        x = "CNV Size")
```

```{r}
ggplot(cnv_groups, aes(x = region_size, y = max_norm_depth, size = n)) +
        geom_point()+
        theme_minimal() +
        theme(legend.position = "bottom")+
        labs(title = "Normalized Depth vs CNV Size",
        y = "Normalized Depth",
        x = "CNV Size")
```

## Explore called duplications dCNVs

```{r}
dup_calls <- filter(cnv_calls, cnv == "duplication")
head(dup_calls)
```
```{r}
#| fig.height: 7
#| fig.width: 7
ggplot(dup_calls, aes(x = chromosome, y = norm_depth, color = repeat_fraction)) +
        geom_quasirandom()+
        theme_minimal() +
        theme(legend.position = "bottom")+
        labs(title = "Distribution of Normalized Depth of dCNVs",
        y = "Normalized Depth",
        x = "Chromosome")
```
To filter out the dCNVs that have very large Normalized Depth. Here I 
make groups of CNVs that start at the same position in the same chromosome.
```{r, output= FALSE}
dup_summary <- dup_calls %>%
    group_by(lineage, chromosome, start, end, region_size) %>%
    summarize(max_depth = max(norm_depth),
              median_depth = median(norm_depth),
              n = n())
```

Joined CNVs with max depth larger than 5:
```{r}
summary_large_dups <- dup_summary %>%
                        filter((max_depth > 5))%>%
                        arrange(desc(n))
head(summary_large_dups)
```

Filter out duplications that are part of the groups in the previous table.  
This way of filtering removes 
individual CNVs that not necesarily have depth grater than 5 but other samples in the lineage have a high depth CNV in the same region.
```{r}
dup_calls_filtered <- dup_calls %>%
    filter(!paste(start, end, chromosome, lineage) %in% 
           paste(summary_large_dups$start, summary_large_dups$end, summary_large_dups$chromosome, summary_large_dups$lineage))
```


```{r}
#| fig.height: 7
#| fig.width: 7
ggplot(dup_calls_filtered, aes(x = chromosome, y = norm_depth, color = repeat_fraction)) +
        geom_quasirandom()+
        theme_minimal() +
        theme(legend.position = "bottom")+
        labs(title = "Distribution of Normalized Depth of dCNVs",
        y = "Normalized Depth",
        x = "Chromosome")
```
```{r}
#| fig.height: 7
#| fig.width: 7
ggplot(dup_calls_filtered, aes(x = chromosome, y = smooth_depth, color = repeat_fraction)) +
    geom_quasirandom() +
    theme_minimal() +
    theme(legend.position = "bottom") +
    scale_y_continuous(breaks = seq(0, max(dup_calls_filtered$smooth_depth, na.rm = TRUE), by = 0.5)) +
    labs(title = "Distribution of Smooth Normalized Depth of dCNVs",
         y = "Smooth Normalized Depth",
         x = "Chromosome")
```

```{r}
n <- ggplot(dup_calls_filtered)+
    geom_histogram(aes(norm_depth), binwidth = 0.01)+
    scale_x_continuous(limits = c(0, 5), breaks = seq(0, 5, by = 0.5)) +
    theme_minimal() +
    labs(title = "Histogram of Normalized Depth of CNVs",
        y = "Count",
        x = "Noramlized Depth of CNVs")
s <- ggplot(dup_calls_filtered)+
    geom_histogram(aes(smooth_depth), binwidth = 0.01)+
    scale_x_continuous(limits = c(0, 5), breaks = seq(0, 5, by = 0.5)) +
    theme_minimal() +
    labs(title = "Histogram of Normalized Smooth Depth of CNVs",
        y = "Count",
        x = "Normalized Smooth Depth of CNVs")
n / s
```

```{r}
#| fig.height: 7
#| fig.width: 7
n <- ggplot(dup_calls_filtered, aes(x = region_size, y = norm_depth, color = repeat_fraction)) +
        geom_point()+
        ylim(0,5)+
        theme_minimal() +
        theme(legend.position = "bottom")+
        labs(title = "Distribution of Normalized Depth of dCNVs",
        y = "Normalized Depth",
        x = "CNV Size")+
    scale_x_continuous(labels = scales::comma)

s <- ggplot(dup_calls_filtered, aes(x = region_size, y = smooth_depth, color = repeat_fraction)) +
        geom_point()+
        ylim(0,5)+
        theme_minimal() +
        theme(legend.position = "bottom")+
        labs(title = "Distribution of Normalized Depth of dCNVs",
        y = "Smooth Normalized Depth",
        x = "CNV Size")+
    scale_x_continuous(labels = scales::comma)

n | s
```

### Median depth of chromosomes 

```{r}
depth_by_chrom_good_desjardins <- read.delim(
    depth_by_chrom_good_desj_path,
     header=TRUE, sep="\t")
depth_by_chrom_good_ashton <- read.delim(
    depth_by_chrom_good_ashton_path,
     header=TRUE, sep="\t")
depth_by_chrom_good <- rbind(depth_by_chrom_good_desjardins, depth_by_chrom_good_ashton)
depth_by_chrom <- depth_by_chrom_good %>%
    select(sample, accession, norm_chrom_median, norm_chrom_mean)
head(depth_by_chrom)
```
## Metrics per chromosome

### Join metrics from CNVs and depth of chromosome

The dataframe `all_metrics` contains a row per individual called duplication with the information about the CNV and the chromosome of the sample. 
For the chromosome-sample without any called duplication, the columns related to CNVs have NAs.
```{r}
all_metrics <- left_join(depth_by_chrom, dup_calls_filtered,
        by = c("sample", "accession"))%>%
    select(-chromosome, -lineage)%>%
    left_join(chromosome_lengths, by = "accession") %>%
    left_join(chromosome_names,by ="accession") %>%
    left_join(metadata, by = c("sample", "lineage"))
head(all_metrics)
```

### Summarize the metrics of the called CNVs per chromosome
And keep the rest of the chromosome metrics.

```{r, message=FALSE}
chrom_metrics <- all_metrics %>%
    group_by(sample, strain, chromosome, norm_chrom_mean, norm_chrom_median, length,
            accession,  source, lineage,
            samples_in_lineage, samples_in_dataset_lineage, 
            total_samples,dataset) %>%
    summarise(total_cnv_size = sum(region_size),
                n_cnvs = n(), #fix this
                first = min(start),
                last = max(end),
                mean_cnv_depth = round(mean(norm_depth),2),
                median_cnv_depth = round(median(norm_depth),2),
                repeat_size = sum(overlap_bp)) %>%
            ungroup()%>%
    mutate(dup_coverage_percent = round((total_cnv_size / length) * 100, 2),
            dup_span_size = last - first,
            dup_span_percent = round((dup_span_size / length) * 100, 2),
            dup_repeat_percent = round((repeat_size / length) * 100, 2),
            chromosome = as.factor(chromosome),
            dup_coverage_percent = ifelse(is.na(dup_coverage_percent), 0, dup_coverage_percent),
            dup_span_percent = ifelse(is.na(dup_span_percent), 0, dup_span_percent))
head(chrom_metrics)
```

```{r, echo = FALSE}
cat("The total number of chromosomes in all samples in the dataset is:", nrow(chrom_metrics))
cat("The total number of chromosomes in all samples with called duplications is:", nrow(chrom_metrics %>% filter(!is.na(total_cnv_size))))
```

### Explore relationship between CNV chromosomal metrics
```{r}
ggplot(chrom_metrics, aes(x = dup_coverage_percent, y = dup_span_percent)) +
        geom_point(aes(color = n_cnvs)) +
        scale_x_continuous(labels = scales::comma) +
        scale_color_distiller(palette = "GnBu", direction = -1, trans = "log2", name = "Number\n of CNVs") +
        theme_minimal() +
        theme(legend.position = "right")+
        labs(title = "Percent of Chromosome Covered by CNVs vs Spanned by CNVs",
            y = "Percent of Chromosome Spanned by CNVs",
            x = "Percent of Chromosome Covered by CNVs")
```
```{r}
#| fig.height: 9
#| fig.width: 7
ggplot(chrom_metrics, aes(x = dup_coverage_percent, y = dup_span_percent)) +
        geom_point(aes(color = n_cnvs)) +
        facet_wrap(~chromosome, ncol = 3)+
        scale_x_continuous(labels = scales::comma) +
        scale_color_distiller(palette = "GnBu", direction = -1, trans = "log2", name = "Number\n of CNVs") +
        theme_minimal() +
        theme(legend.position = "right")+
        labs(title = "Percent of Chromosome Covered by CNVs vs Spanned by CNVs",
            y = "Percent of Chromosome Spanned by CNVs",
            x = "Percent of Chromosome Covered by CNVs")
```
```{r}
ggplot(chrom_metrics, aes(x = dup_coverage_percent, y = dup_span_percent)) +
        geom_point(aes(color = dup_repeat_percent)) +
        scale_x_continuous(labels = scales::comma) +
        scale_color_distiller(palette = "YlOrRd", direction = 1, trans = "log2", name = "Percent of CNV\nOverlaped by Repeats") +
        theme_minimal() +
        theme(legend.position = "right")+
        labs(title = "Percent of Chromosome Covered by CNVs vs Spanned by CNVs",
            y = "Percent of Chromosome Spanned by CNVs",
            x = "Percent of Chromosome Covered by CNVs")
```

```{r}
ggplot(chrom_metrics)+
    geom_histogram(aes(dup_coverage_percent), binwidth = 1)+
    scale_x_continuous(breaks = seq(0,100, by = 5)) +
    theme_minimal() +
    labs(title = "Histogram of Percent of Chromosome Covered by CNVs",
            y = "Count",
            x = "Percent of Chromosome Covered by CNVs")
```
```{r}
ggplot(filter(chrom_metrics, dup_coverage_percent > 0))+
    geom_histogram(aes(dup_coverage_percent), binwidth = 1)+
    scale_x_continuous(breaks = seq(0,100, by = 5)) +
    theme_minimal() +
    labs(title = "Histogram of Percent of Chromosome Covered by CNVs",
            subtitle = "Only values above 0%",
            y = "Count",
            x = "Percent of Chromosome Covered by CNVs")
```
```{r}
ggplot(filter(chrom_metrics, dup_coverage_percent > 15))+
    geom_boxplot(aes(x = chromosome, y = dup_coverage_percent))+
    geom_quasirandom(aes(x = chromosome, y = dup_coverage_percent))+
    theme_minimal() +
    labs(title = "Boxplot of Percent of Chromosome Covered by CNVs per Chromosome",
            subtitle = "Only values above 15%",
            y = "Count",
            x = "Percent of Chromosome Covered by CNVs")
```

```{r}
ggplot(filter(chrom_metrics, dup_span_percent > 0))+
    geom_histogram(aes(dup_span_percent), binwidth = 1)+
    scale_x_continuous(breaks = seq(0,100, by = 5)) +
    theme_minimal() +
    labs(title = "Histogram of Percent of Chromosome Spanned by CNVs",
            subtitle = "Only values above 0%",
            y = "Count",
            x = "Percent of Chromosome Spanned by CNVs")
```

### Explore metrics of median depth of chromosomes
```{r}
ggplot(chrom_metrics)+
    geom_histogram(aes(norm_chrom_median), binwidth = 0.01)+
    scale_x_continuous(breaks = seq(0,max(chrom_metrics$norm_chrom_median), by = 0.1)) +
    theme_minimal() +
    labs(title = "Histogram of Normalized median depth of chromosomes",
            y = "Count",
            x = "Normalized median depth of chromosomes")
```
```{r}
ggplot(filter(chrom_metrics, norm_chrom_median > 1))+
    geom_histogram(aes(norm_chrom_median), binwidth = 0.01)+
    scale_x_continuous(breaks = seq(0,max(chrom_metrics$norm_chrom_median), by = 0.1)) +
    theme_minimal() +
    labs(title = "Histogram of Normalized median depth of chromosomes",
            subtitle = "Only values above 1",
            y = "Count",
            x = "Normalized median depth of chromosomes")
```
```{r}
ggplot(filter(chrom_metrics, norm_chrom_median > 1.2))+
    geom_histogram(aes(norm_chrom_median), binwidth = 0.01)+
    scale_x_continuous(breaks = seq(0,max(chrom_metrics$norm_chrom_median), by = 0.1)) +
    theme_minimal() +
    labs(title = "Histogram of Normalized median depth of chromosomes",
            subtitle = "Only values above 1.2",
            y = "Count",
            x = "Normalized median depth of chromosomes")
```

## Compare metrics of dCNVs with chromosome depth

The **Normalized depth** (`norm_depth`) is the median of the normalized depth of the windows that are part of each CNV region.  

The **Median depth of CNV** (`median_cnv_depth`) is the median of the Normalized depth of all CNVs in the chromosome. There are values bellow the threshold of depth to call a Duplication CNV because that threshold was applied to the smoothed values and this are the raw values.  

The **Normalized median depth of chromosomes** (`norm_chrom_median`) is the normalized median of the depth of the positions in the whole chromosome. (First the median was calculated and then normalized).  

The **Percent of Chromosome Covered by CNVs** (`dup_coverage_percent`) is the percentage of the full length of the chromosome that is part of called CNVs.  

The **Percent of Chromosome Spanned by CNVs** (`dup_span_percent`) is the percentage of the full length of the chromosome that is in between the leftmost and rightmost CNVs.  

```{r}
color_range <- paste("2.6 -", max(chrom_metrics$median_cnv_depth, na.rm = TRUE))
colors <- c("#FDE725", "#1F9E89", "#440154")
names(colors) <-c("0 - 1.6", "1.6 - 2.6", color_range)
ggplot(chrom_metrics, aes(x = dup_coverage_percent, y = norm_chrom_median)) +
        geom_hline(yintercept = c(1, 2), color = "black", linetype = "dashed") +
        geom_point(aes(color = cut(median_cnv_depth, 
                            breaks = c(-Inf, 1.6, 2.6, Inf), 
                            labels = c("0 - 1.6", "1.6 - 2.6", color_range))),
                            alpha = 0.5) +
        scale_color_manual(values = colors, 
                            name = "Median CNV Depth") +
        theme_minimal() +
        theme(legend.position = "right") +
        labs(title = "Percent of Chromosome Covered by CNVs vs. Depth of Chromosome",
             y = "Normalized Median Depth of Chromosome",
             x = "Percent of Chromosome Covered by CNVs")
```
```{r}
ggplot(chrom_metrics, aes(x = dup_coverage_percent, y = norm_chrom_median)) +
        facet_wrap(~chromosome, ncol = 4)+
        geom_hline(yintercept = c(1, 2), color = "black", linetype = "dashed") +
        geom_point(aes(color = cut(median_cnv_depth, 
                            breaks = c(-Inf, 1.6, 2.6, Inf), 
                            labels = c("0 - 1.6", "1.6 - 2.6", color_range))),
                            alpha = 0.5) +
        scale_color_manual(values = colors, 
                            name = "Median CNV Depth") +
        theme_minimal() +
        theme(legend.position = "right") +
        labs(title = "Percent of Chromosome Covered by CNVs vs. Depth of Chromosome",
             y = "Normalized Median Depth of Chromosome",
             x = "Percent of Chromosome Covered by CNVs")

```

## Explore repeats
Get the percentage of each chromosome covered by repeats to know how much of a chromosome might not have reliable CNV calls.

```{r}
lineages <- unique(metadata$lineage)
repeats_all <- data.frame()
for(lineage in lineages){
    repeats_path <-paste(
        repeats_path_prefix,
        lineage, "/", lineage, "_repeats.bed",
        sep ="")
    repeats <- read.delim(repeats_path, 
        header=FALSE, 
        col.names=c("accession", "start", "end", "repeat_type"), 
        sep="\t")
    repeats$lineage <- lineage
    repeats_all <- rbind(repeats_all, repeats)
}
```
```{r, message=FALSE}
repeats_percent <- repeats_all %>%
    mutate(repeat_size_each = end - start)%>%
    group_by(accession, lineage) %>%
    summarise(repeat_size = sum(repeat_size_each)) %>%
    left_join(chromosome_lengths, by="accession") %>%
    left_join(chromosome_names, by=c("accession","lineage")) %>%
    mutate(percent_repeat_size = round((repeat_size / length) * 100, 2))%>%
    mutate(chromosome = as.factor(chromosome))%>%
    select(lineage, accession, chromosome, percent_repeat_size)
```

```{r, echo=FALSE}
#| fig-height: 5
#| fig-width: 9
ggplot(repeats_percent)+
    geom_col(aes(x=lineage, y=percent_repeat_size, fill = lineage))+
    facet_grid(~chromosome, scales="free")+
    labs(title = "Percentage of each chromosome covered by repeats", x="Lineage", y="Percent of chromosome covered by repeats (%)")+
    theme(panel.grid.major.x = element_blank(),
        panel.grid.minor.x = element_blank(),
        panel.grid.major.y = element_line(color = "lightgray"),
        panel.grid.minor.y = element_blank(),
        panel.background = element_rect(fill = "white"),
        axis.text.x = element_text(angle = 45, hjust = 1),
        panel.border = element_rect(colour = "lightgray", fill=NA, linewidth = 2),
        legend.position = "none")
```
Most chromosomes have repeats in between 5 and 10% of the size. In VNBII it is closer to 15% for some chormosomes.

## Explore putative duplicated chromosomes
Filter by percent of chromosome in CNV or chromosome depth
```{r}
#| code-fold: false
size_threshold <- 50
depht_threshold <- 1.55
```

```{r}
chrom_metrics_filtered <- chrom_metrics %>%
    filter(dup_coverage_percent >= size_threshold | norm_chrom_median >= 1.55)
```
```{r}
ggplot(chrom_metrics_filtered, aes(x = dup_coverage_percent, y = norm_chrom_median)) +
        geom_hline(yintercept = c(1, 2), color = "black", linetype = "dashed") +
        geom_point(aes(color = cut(median_cnv_depth, 
                            breaks = c(-Inf, 1.6, 2.6, Inf), 
                            labels = c("0 - 1.6", "1.6 - 2.6", color_range))),
                            alpha = 0.5) +
        scale_color_manual(values = colors, 
                            name = "Median CNV Depth") +
        theme_minimal() +
        theme(legend.position = "right") +
        labs(title = "Percent of Chromosome Covered by CNVs vs. Depth of Chromosome",
             y = "Normalized Median Depth of Chromosome",
             x = "Percent of Chromosome Covered by CNVs")
```
```{r}
ggplot(chrom_metrics_filtered, aes(x = dup_coverage_percent, y = norm_chrom_median)) +
        facet_wrap(~chromosome, ncol = 3)+

        geom_hline(yintercept = c(1, 2), color = "black", linetype = "dashed") +
        geom_point(aes(color = cut(median_cnv_depth, 
                            breaks = c(-Inf, 1.6, 2.6, Inf), 
                            labels = c("0 - 1.6", "1.6 - 2.6", color_range))),
                            alpha = 0.5) +
        scale_color_manual(values = colors, 
                            name = "Median CNV Depth") +
        theme_minimal() +
        theme(legend.position = "right") +
        labs(title = "Percent of Chromosome Covered by CNVs vs. Depth of Chromosome",
             y = "Normalized Median Depth of Chromosome",
             x = "Percent of Chromosome Covered by CNVs")
```

```{r}

ggplot(chrom_metrics_filtered, aes(x = dup_coverage_percent, y = norm_chrom_median)) +
        geom_point(aes(color = n_cnvs)) +
        facet_wrap(~chromosome, ncol = 3)+
        scale_x_continuous(labels = scales::comma) +
        scale_color_distiller(palette = "GnBu", direction = -1, trans = "log2", name = "Number\n of CNVs") +
        theme_minimal() +
        geom_hline(yintercept = c(1, 2), color = "black", linetype = "dashed") +
        labs(title = "Percent of Chromosome Covered by CNVs vs. Depth of Chromosome",
            y = "Normalized Median Depth of Chromosome",
            x = "Percent of Chromosome Covered by CNVs")+
        theme(panel.grid.major.x = element_blank(),
            panel.grid.minor.x = element_blank(),
            panel.grid.major.y = element_line(color = "lightgray"),
            panel.grid.minor.y = element_blank(),
            panel.background = element_rect(fill = "white"),
            axis.text.x = element_text(angle = 45, hjust = 1),
            panel.border = element_rect(colour = "lightgray", fill=NA, linewidth = 2),
            legend.position = "right")
```
```{r}
ggplot(chrom_metrics_filtered, aes(x = dup_coverage_percent, y = norm_chrom_median)) +
        geom_point(aes(color = dup_span_percent)) +
        facet_wrap(~chromosome, ncol = 3)+
        scale_x_continuous(labels = scales::comma) +
        scale_color_distiller(palette = "BuPu", direction = 1, name = "Percent Spanned\nby CNVs") +
        geom_hline(yintercept = c(1, 2), color = "black", linetype = "dashed") +
        labs(title = "Percent of Chromosome Covered by CNVs vs. Depth of Chromosome",
            y = "Normalized Median Depth of Chromosome",
            x = "Percent of Chromosome Covered by CNVs")+
        theme_minimal()+
        theme(panel.grid.major.x = element_blank(),
            panel.grid.minor.x = element_blank(),
            panel.grid.major.y = element_line(color = "lightgray"),
            panel.grid.minor.y = element_blank(),
            panel.background = element_rect(fill = "white"),
            axis.text.x = element_text(angle = 45, hjust = 1),
            panel.border = element_rect(colour = "lightgray", fill=NA, linewidth = 2),
            legend.position = "right")
```

```{r}
write_tsv(chrom_metrics_filtered, duplications_out_path)
```

### Explore sample with very large Median Depth of Chromosome

```{r}
chrom_metrics_filtered %>%
    filter(norm_chrom_median > 2.5)%>%
    select(sample, strain, chromosome, norm_chrom_median, dup_coverage_percent)
```