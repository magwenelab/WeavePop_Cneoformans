---
title: "Explore called duplications"
author: "Claudia Zirión-Martínez"
date: "2025-02-13"

fig-height: 7
fig-width: 9
---
## Index

- [Setup](#setup)
- [Prepare dataset](#prepare-dataset)
    - [Metadata](#metadata)
    - [Chromosome names and length](#chromosome-names-and-length)
    - [Median depth of chromosomes](#median-depth-of-chromosomes)
    - [Called CNVs](#called-cnvs)
- [Explore repeats](#explore-repeats)
- [Explore called duplications](#explore-called-duplications)
    - [Filter out duplication of Chr02](#filter-out-duplication-of-chr02)
    - [Filter out duplication of Chr01 in VNI](#filter-out-duplication-of-chr01-in-vni)
- [Join metrics from CNVs and depth of chromosome](#join-metrics-from-cnvs-and-depth-of-chromosome)
- [Explore relationship between metrics](#explore-relationship-between-metrics)
- [Compare metrics of CNVs with chromosome depth](#compare-metrics-of-cnvs-with-chromosome-depth)
- [Explore putative duplicated chromosomes](#explore-putative-duplicated-chromosomes)
    - [Explore sample with very large Median Depth of Chromosome](#explore-sample-with-very-large-median-depth-of-chromosome)

## Setup

```{r, eval=FALSE, echo=FALSE}
setwd("/FastData/czirion/WeavePop_Cneoformans/analyses/")
```
Libraries
```{r, output=FALSE}
library(tidyverse)
library(patchwork)
library(ggbeeswarm)
library(ggnewscale)
library(RColorBrewer)
```
Paths
```{r}
metadata_path <-
    "data/processed/metadata_ashton_desj_all_weavepop_H99.csv"
chromosomes_path <-
    "../Crypto_Desjardins_Ashton/results_clean/02.Dataset/chromosomes.csv"
chrom_lengths_path <-
    "data/processed/chromosome_lengths.tsv"
depth_by_chrom_good_desj_path <-
    "../Crypto_Desjardins/results_clean/04.Intermediate_files/02.Dataset/depth_quality/depth_by_chrom_good.tsv"
depth_by_chrom_good_ashton_path <-
    "../Crypto_Ashton/results_clean/04.Intermediate_files/02.Dataset/depth_quality/depth_by_chrom_good.tsv"
cnv_calls_path <-
    "../Crypto_Desjardins_Ashton/results_clean/02.Dataset/cnv/cnv_calls.tsv"
duplications_out_path <-
    "results/tables/duplications_putative.tsv"
repeats_path_prefix <-
    "../Crypto_Desjardins/results_clean/03.References/"
```

## Prepare dataset

### Metadata

Use the metadata table that has all the samples included in the final Crypto_Desjardins_Ashton dataset (n = 1055) and H99.  
Select needed columns, remove H99 and get the number of samples per dataset and lineage, per lineage, and total.

```{r, message=FALSE, warning=FALSE}
metadata <- read.delim(
    metadata_path,
    header=TRUE,
    sep=",",
    stringsAsFactor = TRUE)
metadata <- metadata %>%
    select(sample, strain, source, lineage, dataset, vni_subdivision)%>%
    filter(!strain == "H99") %>%
    group_by(dataset, lineage)%>%
    mutate(samples_in_dataset_lineage = n_distinct(sample))%>%
    ungroup() %>%
    group_by(lineage)%>%
    mutate(samples_in_lineage = n_distinct(sample))%>%
    ungroup()%>%
    mutate(total_samples = n_distinct(sample))%>%
    droplevels()
```

### Chromosome names and length

Get the nice chromosome names from the chromosomes file in WeavePop.
```{r}
chromosome_names = read.delim(
    chromosomes_path,
    header=TRUE, sep=",")
chromosome_names <- chromosome_names %>%
    mutate(chromosome = str_pad(chromosome, 2, pad = "0"))%>%
    mutate(chromosome = as.factor(chromosome))
levels(chromosome_names$chromosome) <- paste("chr", chromosome_names$chromosome, sep="")
```

Get the chromosome lengths. 
Create the file with bash.
```{bash, eval=FALSE}
# /usr/bin/bash
tail -n +2 ../Crypto_Desjardins/config/chromosomes.csv | \
    cut -d',' -f1 | sort | uniq | while read line 
do
seqkit fx2tab ../Crypto_Desjardins/data/references/$line.fasta -l -i -n >> data/processed/chromosome_lengths.tsv
done
```
```{r}
chromosome_lengths = read.delim(
    chrom_lengths_path,
    header=FALSE, 
    col.names=c("accession", "length"), 
    sep="\t")
```

### Median depth of chromosomes 

```{r}
depth_by_chrom_good_desjardins <- read.delim(
    depth_by_chrom_good_desj_path,
     header=TRUE, sep="\t")
depth_by_chrom_good_ashton <- read.delim(
    depth_by_chrom_good_ashton_path,
     header=TRUE, sep="\t")
depth_by_chrom_good <- rbind(depth_by_chrom_good_desjardins, depth_by_chrom_good_ashton)
depth_by_chrom <- depth_by_chrom_good %>%
    select(sample, accession, norm_chrom_median, norm_chrom_mean)
head(depth_by_chrom)
```

### Called CNVs

Import the file with all called CNVs and keep only the duplications.
```{r}
cnv_calls <- read.delim(
    cnv_calls_path, 
    header=TRUE, sep="\t")
dup_calls <- filter(cnv_calls, cnv == "duplication") %>%
    left_join(chromosome_names, by="accession")
head(dup_calls)
```

The **Normalized depth** (`norm_depth`) is the median of the normalized depth of the windows that are part of the CNV region.

## Explore repeats
Get the percentage of each chromosome covered by repeats to know how much of a chromosome might not have reliable CNV calls.

```{r}
lineages <- unique(metadata$lineage)
repeats_all <- data.frame()
for(lineage in lineages){
    repeats_path <-paste(
        repeats_path_prefix,
        lineage, "/", lineage, "_repeats.bed",
        sep ="")
    repeats <- read.delim(repeats_path, 
        header=FALSE, 
        col.names=c("accession", "start", "end", "repeat_type"), 
        sep="\t")
    repeats$lineage <- lineage
    repeats_all <- rbind(repeats_all, repeats)
}
```
```{r, message=FALSE}
repeats_percent <- repeats_all %>%
    mutate(repeat_size_each = end - start)%>%
    group_by(accession, lineage) %>%
    summarise(repeat_size = sum(repeat_size_each)) %>%
    left_join(chromosome_lengths, by="accession") %>%
    left_join(chromosome_names, by=c("accession","lineage")) %>%
    mutate(percent_repeat_size = round((repeat_size / length) * 100, 2))%>%
    mutate(chromosome = as.factor(chromosome))%>%
    select(lineage, accession, chromosome, percent_repeat_size)
```

```{r, echo=FALSE}
#| fig-height: 5
#| fig-width: 9
ggplot(repeats_percent)+
    geom_col(aes(x=lineage, y=percent_repeat_size, fill = lineage))+
    facet_grid(~chromosome, scales="free")+
    labs(title = "Percentage of each chromosome covered by repeats", x="Lineage", y="Percent of chromosome covered by repeats (%)")+
    theme(panel.grid.major.x = element_blank(),
        panel.grid.minor.x = element_blank(),
        panel.grid.major.y = element_line(color = "lightgray"),
        panel.grid.minor.y = element_blank(),
        panel.background = element_rect(fill = "white"),
        axis.text.x = element_text(angle = 45, hjust = 1),
        panel.border = element_rect(colour = "lightgray", fill=NA, linewidth = 2),
        legend.position = "none")
```
Most chromosomes have repeats in between 5 and 10% of the size. In VNBII it is closer to 15% for some chormosomes.

## Explore called duplications

```{r}
#| fig.height: 7
#| fig.width: 7
ggplot(dup_calls, aes(x = chromosome, y = norm_depth, color = repeat_fraction)) +
        geom_quasirandom()+
        theme_minimal() +
        theme(legend.position = "bottom")+
        labs(title = "Distribution of Normalized Depth of dCNVs",
        y = "Normalized Depth",
        x = "Chromosome")
```
To filter out the dCNVs that have very large Normalized Depth. Here I 
make groups of CNVs that start at the same position in the same chromosome.
```{r, output= FALSE}
dup_summary <- dup_calls %>%
    group_by(start, end, accession, lineage) %>%
    summarize(max_depth = max(norm_depth),
              median_depth = median(norm_depth),
              n = n(),
              chromosome = first(chromosome),
              size = first(region_size))
```

```{r}
summary_large_dups <- dup_summary %>%
                        filter((max_depth > 5))%>%
                        arrange(desc(n))
summary_large_dups
```

```{r}
dup_calls_filtered <- dup_calls %>%
    filter(!paste(start, end, accession, lineage) %in% 
           paste(summary_large_dups$start, summary_large_dups$end, summary_large_dups$accession, summary_large_dups$lineage))
```


```{r}
#| fig.height: 7
#| fig.width: 7
ggplot(dup_calls_filtered, aes(x = chromosome, y = norm_depth, color = repeat_fraction)) +
        geom_quasirandom()+
        theme_minimal() +
        theme(legend.position = "bottom")+
        labs(title = "Distribution of Normalized Depth of dCNVs",
        y = "Normalized Depth",
        x = "Chromosome")
```

There is a duplication in many VNI samples in Chr02 with depth from 10 to 120X with a similar size and position, and with more than half of the CNV overlapping with repetitive sequences.

### Filter out duplication of Chr02

Since that group in chr02 is the only with both depth higher than 10 and repeat fraction higher than 0.5, we use those thresholds to remove that group of CNVs.
```{r}
dup_calls_filtered <- dup_calls %>%
    filter(!(norm_depth > 10 & repeat_fraction > 0.5 & chromosome == "chr02"))
```
```{r}
#| fig.height: 7
#| fig.width: 7
ggplot(dup_calls_filtered, aes(x = chromosome, y = norm_depth, color = repeat_fraction)) +
        geom_quasirandom()+
        theme_minimal() +
        theme(legend.position = "bottom")+
        labs(title = "Distribution of Normalized Depth of dCNVs",
        y = "Normalized Depth",
        x = "Chromosome")
```

Explore repeat fraction, size and position of dCNVs of **Chr01**.
```{r}
#| fig.height: 7
#| fig.width: 7
r <- ggplot(filter(dup_calls, chromosome == "chr01"), aes(x = repeat_fraction, y = norm_depth)) +
        geom_point(aes(color = lineage)) +
        theme_minimal() +
        theme(legend.position = "none")+
        labs(title = "Repetitive Fraction vs. Depth",
            y = "Normalized Depth",
            x = "Fraction of CNV Overlaping with Repetitive Sequences")

s <- ggplot(filter(dup_calls, chromosome == "chr01"), aes(x = region_size, y = norm_depth)) +
        geom_point(aes(color = lineage)) +
        scale_x_continuous(labels = scales::comma) +
        theme_minimal() +
        theme(legend.position = "none")+
        labs(title = "Size of CNV vs. Depth",
            y = "Normalized Depth",
            x = "Size of CNV")

p <- ggplot(filter(dup_calls, chromosome == "chr01"), aes(x = start, y = norm_depth)) +
        geom_point(aes(color = lineage)) +
        scale_x_continuous(labels = scales::comma) +
        theme_minimal() +
        theme(legend.position = "bottom")+
        labs(title = "Depth Along Chromosomes",
            y = "Normalized Depth",
            x = "Position")
r/s/p
```
There is duplication in many VNI samples in Chr01 with a depth of up to 40X, it is not highly repetitive and it is in the same position.

### Filter out duplication of Chr01 in VNI

Explore chr01 to know how to filter that out.


Print groups in chr01 with max depth higher than 4.
```{r}
dup_summary %>%
    filter(chromosome == "chr01", max_depth > 4)
```
Print groups in chr01 that start between the positions 339000 and 340000.
```{r}
dup_summary %>%
    filter(chromosome == "chr01", start > 339000, start < 340000)
```
Filter out the CNVs in chr01 that start between the positions 337000 and 340000 and that start at position 1.
```{r}
dup_calls_filtered <- dup_calls_filtered %>%
    filter(!(chromosome == "chr01" & start > 339000 & start < 340000))%>%
    filter(!(chromosome == "chr01" & start == 1))
```
```{r}
#| fig.height: 7
#| fig.width: 7
ggplot(dup_calls_filtered, aes(x = chromosome, y = norm_depth, color = repeat_fraction)) +
        geom_quasirandom()+
        theme_minimal() +
        theme(legend.position = "bottom")+
        labs(title = "Distribution of Normalized Depth of dCNVs",
        y = "Normalized Depth",
        x = "Chromosome")
```

Explore repeat fraction, size and position of dCNVs of **Chr03**.
```{r}
#| fig.height: 7
#| fig.width: 7
r <- ggplot(filter(dup_calls, chromosome == "chr03"), aes(x = repeat_fraction, y = norm_depth)) +
        geom_point(aes(color = lineage)) +
        theme_minimal() +
        theme(legend.position = "none")+
        labs(title = "Repetitive Fraction vs. Depth",
            y = "Normalized Depth",
            x = "Fraction of CNV Overlaping with Repetitive Sequences")

s <- ggplot(filter(dup_calls, chromosome == "chr03"), aes(x = region_size, y = norm_depth)) +
        geom_point(aes(color = lineage)) +
        scale_x_continuous(labels = scales::comma) +
        theme_minimal() +
        theme(legend.position = "none")+
        labs(title = "Size of CNV vs. Depth",
            y = "Normalized Depth",
            x = "Size of CNV")

p <- ggplot(filter(dup_calls, chromosome == "chr03"), aes(x = start, y = norm_depth)) +
        geom_point(aes(color = lineage)) +
        scale_x_continuous(labels = scales::comma) +
        theme_minimal() +
        theme(legend.position = "bottom")+
        labs(title = "Depth Along Chromosomes",
            y = "Normalized Depth",
            x = "Position")
r/s/p
```
Explore chr03 to know how to filter that out.

Print groups in chr03 with max depth higher than 4.
```{r}
dup_summary %>%
    filter(chromosome == "chr03", max_depth > 4)
```

Filter out the CNVs in chr03 that start at positions 1533001.
```{r}
dup_calls_filtered <- dup_calls_filtered %>%
    filter(!(chromosome == "chr03" & start == 1533001))
```
```{r}
#| fig.height: 7
#| fig.width: 7
ggplot(dup_calls_filtered, aes(x = chromosome, y = norm_depth, color = repeat_fraction)) +
        geom_quasirandom()+
        theme_minimal() +
        theme(legend.position = "bottom")+
        labs(title = "Distribution of Normalized Depth of dCNVs",
        y = "Normalized Depth",
        x = "Chromosome")
```
## Join metrics from CNVs and depth of chromosome

The dataframe `all_metrics` contains a row per individual called duplication with the information about the CNV and the chromosome of the sample. 
For the chromosome-sample without any called duplication, the columns related to CNVs have NAs.
```{r}
all_metrics <- left_join(depth_by_chrom, dup_calls, #or dup_calls_filtered
        by = c("sample", "accession"))%>%
    select(-chromosome, -lineage)%>%
    left_join(chromosome_lengths, by = "accession") %>%
    left_join(chromosome_names,by ="accession") %>%
    left_join(metadata, by = c("sample", "lineage"))
head(all_metrics)
```

Summarize the metrics of the called CNVs per chromosome. And keep the rest of the chromosome metrics.

```{r, message=FALSE}
chrom_metrics <- all_metrics %>%
    group_by(sample, strain, chromosome, norm_chrom_mean, norm_chrom_median, length,
            accession,  source, lineage,
            samples_in_lineage, samples_in_dataset_lineage, 
            total_samples,dataset) %>%
    summarise(total_cnv_size = sum(region_size),
                n_cnvs = n(),
                first = min(start),
                last = max(end),
                mean_cnv_depth = round(mean(norm_depth),2),
                median_cnv_depth = round(median(norm_depth),2),
                repeat_size = sum(overlap_bp)) %>%
            ungroup()%>%
    mutate(dup_coverage_percent = round((total_cnv_size / length) * 100, 2),
            dup_span_size = last - first,
            dup_span_percent = round((dup_span_size / length) * 100, 2),
            dup_repeat_percent = round((repeat_size / length) * 100, 2),
            chromosome = as.factor(chromosome),
            dup_coverage_percent = ifelse(is.na(dup_coverage_percent), 0, dup_coverage_percent),
            dup_span_percent = ifelse(is.na(dup_span_percent), 0, dup_span_percent))
head(chrom_metrics)
```

```{r, echo = FALSE}
cat("The total number of chromosomes in all samples in the dataset is:", nrow(chrom_metrics))
cat("The total number of chromosomes in all samples with called duplications is:", nrow(chrom_metrics %>% filter(!is.na(total_cnv_size))))
```

### Explore relationship between metrics
```{r}
ggplot(chrom_metrics, aes(x = dup_coverage_percent, y = dup_span_percent)) +
        geom_point(aes(color = n_cnvs)) +
        scale_x_continuous(labels = scales::comma) +
        scale_color_distiller(palette = "GnBu", direction = -1, trans = "log2", name = "Number\n of CNVs") +
        theme_minimal() +
        theme(legend.position = "right")+
        labs(title = "Percent of Chromosome Covered by CNVs vs Spanned by CNVs",
            y = "Percent of Chromosome Spanned by CNVs",
            x = "Percent of Chromosome Covered by CNVs")
```
```{r}
#| fig.height: 9
#| fig.width: 7
ggplot(chrom_metrics, aes(x = dup_coverage_percent, y = dup_span_percent)) +
        geom_point(aes(color = n_cnvs)) +
        facet_wrap(~chromosome, ncol = 3)+
        scale_x_continuous(labels = scales::comma) +
        scale_color_distiller(palette = "GnBu", direction = -1, trans = "log2", name = "Number\n of CNVs") +
        theme_minimal() +
        theme(legend.position = "right")+
        labs(title = "Percent of Chromosome Covered by CNVs vs Spanned by CNVs",
            y = "Percent of Chromosome Spanned by CNVs",
            x = "Percent of Chromosome Covered by CNVs")
```
```{r}
ggplot(chrom_metrics, aes(x = dup_coverage_percent, y = dup_span_percent)) +
        geom_point(aes(color = dup_repeat_percent)) +
        scale_x_continuous(labels = scales::comma) +
        scale_color_distiller(palette = "YlOrRd", direction = 1, trans = "log2", name = "Percent of CNV\nOverlaped by Repeats") +
        theme_minimal() +
        theme(legend.position = "right")+
        labs(title = "Percent of Chromosome Covered by CNVs vs Spanned by CNVs",
            y = "Percent of Chromosome Spanned by CNVs",
            x = "Percent of Chromosome Covered by CNVs")
```

```{r}
ggplot(chrom_metrics)+
    geom_histogram(aes(dup_coverage_percent), binwidth = 1)+
    scale_x_continuous(breaks = seq(0,100, by = 5)) +
    theme_minimal() +
    labs(title = "Histogram of Percent of Chromosome Covered by CNVs",
            y = "Count",
            x = "Percent of Chromosome Covered by CNVs")
```
```{r}
ggplot(filter(chrom_metrics, dup_coverage_percent > 0))+
    geom_histogram(aes(dup_coverage_percent), binwidth = 1)+
    scale_x_continuous(breaks = seq(0,100, by = 5)) +
    theme_minimal() +
    labs(title = "Histogram of Percent of Chromosome Covered by CNVs",
            subtitle = "Only values above 0%",
            y = "Count",
            x = "Percent of Chromosome Covered by CNVs")
```
```{r}
ggplot(filter(chrom_metrics, dup_coverage_percent > 15))+
    geom_boxplot(aes(x = chromosome, y = dup_coverage_percent))+
    geom_quasirandom(aes(x = chromosome, y = dup_coverage_percent))+
    theme_minimal() +
    labs(title = "Boxplot of Percent of Chromosome Covered by CNVs per Chromosome",
            subtitle = "Only values above 15%",
            y = "Count",
            x = "Percent of Chromosome Covered by CNVs")
```

```{r}
ggplot(filter(chrom_metrics, dup_span_percent > 0))+
    geom_histogram(aes(dup_span_percent), binwidth = 1)+
    scale_x_continuous(breaks = seq(0,100, by = 5)) +
    theme_minimal() +
    labs(title = "Histogram of Percent of Chromosome Spanned by CNVs",
            subtitle = "Only values above 0%",
            y = "Count",
            x = "Percent of Chromosome Spanned by CNVs")
```

```{r}
ggplot(chrom_metrics)+
    geom_histogram(aes(norm_chrom_median), binwidth = 0.01)+
    scale_x_continuous(breaks = seq(0,max(chrom_metrics$norm_chrom_median), by = 0.1)) +
    theme_minimal() +
    labs(title = "Histogram of Normalized median depth of chromosomes",
            y = "Count",
            x = "Normalized median depth of chromosomes")
```
```{r}
ggplot(filter(chrom_metrics, norm_chrom_median > 1))+
    geom_histogram(aes(norm_chrom_median), binwidth = 0.01)+
    scale_x_continuous(breaks = seq(0,max(chrom_metrics$norm_chrom_median), by = 0.1)) +
    theme_minimal() +
    labs(title = "Histogram of Normalized median depth of chromosomes",
            subtitle = "Only values above 1",
            y = "Count",
            x = "Normalized median depth of chromosomes")
```
```{r}
ggplot(filter(chrom_metrics, norm_chrom_median > 1.2))+
    geom_histogram(aes(norm_chrom_median), binwidth = 0.01)+
    scale_x_continuous(breaks = seq(0,max(chrom_metrics$norm_chrom_median), by = 0.1)) +
    theme_minimal() +
    labs(title = "Histogram of Normalized median depth of chromosomes",
            subtitle = "Only values above 1.2",
            y = "Count",
            x = "Normalized median depth of chromosomes")
```
```{r}
ggplot(chrom_metrics)+
    geom_histogram(aes(median_cnv_depth), binwidth = 0.01)+
    scale_x_continuous(breaks = seq(0, max(chrom_metrics$median_cnv_depth, na.rm = TRUE), by = 0.5)) +
    theme_minimal() +
    labs(title = "Histogram of Median Depth of CNVs",
            y = "Count",
            x = "Median Depth of CNVs")
```

## Compare metrics of CNVs with chromosome depth

The **Normalized depth** (`norm_depth`) is the median of the normalized depth of the windows that are part of each CNV region.  

The **Median depth of CNV** (`median_cnv_depth`) is the median of the Normalized depth of all CNVs in the chromosome. There are values bellow the threshold of depth to call a Duplication CNV because that threshold was applied to the smoothed values and this are the raw values.  

The **Normalized median depth of chromosomes** (`norm_chrom_median`) is the normalized median of the depth of the positions in the whole chromosome. (First the median was calculated and then normalized).  

The **Percent of Chromosome Covered by CNVs** (`dup_coverage_percent`) is the percentage of the full length of the chromosome that is part of called CNVs.  

The **Percent of Chromosome Spanned by CNVs** (`dup_span_percent`) is the percentage of the full length of the chromosome that is in between the leftmost and rightmost CNVs.  

```{r}
color_range <- paste("2.6 -", max(chrom_metrics$median_cnv_depth, na.rm = TRUE))
colors <- c("#FDE725", "#1F9E89", "#440154")
names(colors) <-c("0 - 1.6", "1.6 - 2.6", color_range)
ggplot(chrom_metrics, aes(x = dup_coverage_percent, y = norm_chrom_median)) +
        geom_hline(yintercept = c(1, 2), color = "black", linetype = "dashed") +
        geom_point(aes(color = cut(median_cnv_depth, 
                            breaks = c(-Inf, 1.6, 2.6, Inf), 
                            labels = c("0 - 1.6", "1.6 - 2.6", color_range))),
                            alpha = 0.5) +
        scale_color_manual(values = colors, 
                            name = "Median CNV Depth") +
        theme_minimal() +
        theme(legend.position = "right") +
        labs(title = "Percent of Chromosome Covered by CNVs vs. Depth of Chromosome",
             y = "Normalized Median Depth of Chromosome",
             x = "Percent of Chromosome Covered by CNVs")
```
```{r}
ggplot(chrom_metrics, aes(x = dup_coverage_percent, y = norm_chrom_median)) +
        facet_wrap(~chromosome, ncol = 4)+
        geom_hline(yintercept = c(1, 2), color = "black", linetype = "dashed") +
        geom_point(aes(color = cut(median_cnv_depth, 
                            breaks = c(-Inf, 1.6, 2.6, Inf), 
                            labels = c("0 - 1.6", "1.6 - 2.6", color_range))),
                            alpha = 0.5) +
        scale_color_manual(values = colors, 
                            name = "Median CNV Depth") +
        theme_minimal() +
        theme(legend.position = "right") +
        labs(title = "Percent of Chromosome Covered by CNVs vs. Depth of Chromosome",
             y = "Normalized Median Depth of Chromosome",
             x = "Percent of Chromosome Covered by CNVs")

```

## Explore putative duplicated chromosomes
Filter by percent of chromosome in CNV or chromosome depth
```{r}
#| code-fold: false
size_threshold <- 50
depht_threshold <- 1.55
```

```{r}
chrom_metrics_filtered <- chrom_metrics %>%
    filter(dup_coverage_percent >= size_threshold | norm_chrom_median >= 1.55)
```
```{r}
ggplot(chrom_metrics_filtered, aes(x = dup_coverage_percent, y = norm_chrom_median)) +
        geom_hline(yintercept = c(1, 2), color = "black", linetype = "dashed") +
        geom_point(aes(color = cut(median_cnv_depth, 
                            breaks = c(-Inf, 1.6, 2.6, Inf), 
                            labels = c("0 - 1.6", "1.6 - 2.6", color_range))),
                            alpha = 0.5) +
        scale_color_manual(values = colors, 
                            name = "Median CNV Depth") +
        theme_minimal() +
        theme(legend.position = "right") +
        labs(title = "Percent of Chromosome Covered by CNVs vs. Depth of Chromosome",
             y = "Normalized Median Depth of Chromosome",
             x = "Percent of Chromosome Covered by CNVs")
```
```{r}
ggplot(chrom_metrics_filtered, aes(x = dup_coverage_percent, y = norm_chrom_median)) +
        facet_wrap(~chromosome, ncol = 3)+

        geom_hline(yintercept = c(1, 2), color = "black", linetype = "dashed") +
        geom_point(aes(color = cut(median_cnv_depth, 
                            breaks = c(-Inf, 1.6, 2.6, Inf), 
                            labels = c("0 - 1.6", "1.6 - 2.6", color_range))),
                            alpha = 0.5) +
        scale_color_manual(values = colors, 
                            name = "Median CNV Depth") +
        theme_minimal() +
        theme(legend.position = "right") +
        labs(title = "Percent of Chromosome Covered by CNVs vs. Depth of Chromosome",
             y = "Normalized Median Depth of Chromosome",
             x = "Percent of Chromosome Covered by CNVs")
```

```{r}

ggplot(chrom_metrics_filtered, aes(x = dup_coverage_percent, y = norm_chrom_median)) +
        geom_point(aes(color = n_cnvs)) +
        facet_wrap(~chromosome, ncol = 3)+
        scale_x_continuous(labels = scales::comma) +
        scale_color_distiller(palette = "GnBu", direction = -1, trans = "log2", name = "Number\n of CNVs") +
        theme_minimal() +
        geom_hline(yintercept = c(1, 2), color = "black", linetype = "dashed") +
        labs(title = "Percent of Chromosome Covered by CNVs vs. Depth of Chromosome",
            y = "Normalized Median Depth of Chromosome",
            x = "Percent of Chromosome Covered by CNVs")+
        theme(panel.grid.major.x = element_blank(),
            panel.grid.minor.x = element_blank(),
            panel.grid.major.y = element_line(color = "lightgray"),
            panel.grid.minor.y = element_blank(),
            panel.background = element_rect(fill = "white"),
            axis.text.x = element_text(angle = 45, hjust = 1),
            panel.border = element_rect(colour = "lightgray", fill=NA, linewidth = 2),
            legend.position = "right")
```
```{r}
ggplot(chrom_metrics_filtered, aes(x = dup_coverage_percent, y = norm_chrom_median)) +
        geom_point(aes(color = dup_span_percent)) +
        facet_wrap(~chromosome, ncol = 3)+
        scale_x_continuous(labels = scales::comma) +
        scale_color_distiller(palette = "BuPu", direction = 1, name = "Percent Spanned\nby CNVs") +
        geom_hline(yintercept = c(1, 2), color = "black", linetype = "dashed") +
        labs(title = "Percent of Chromosome Covered by CNVs vs. Depth of Chromosome",
            y = "Normalized Median Depth of Chromosome",
            x = "Percent of Chromosome Covered by CNVs")+
        theme_minimal()+
        theme(panel.grid.major.x = element_blank(),
            panel.grid.minor.x = element_blank(),
            panel.grid.major.y = element_line(color = "lightgray"),
            panel.grid.minor.y = element_blank(),
            panel.background = element_rect(fill = "white"),
            axis.text.x = element_text(angle = 45, hjust = 1),
            panel.border = element_rect(colour = "lightgray", fill=NA, linewidth = 2),
            legend.position = "right")
```

```{r}
write_tsv(chrom_metrics_filtered, duplications_out_path)
```

### Explore sample with very large Median Depth of Chromosome

```{r}
chrom_metrics_filtered %>%
    filter(norm_chrom_median > 2.5)%>%
    select(sample, strain, chromosome, norm_chrom_median, dup_coverage_percent)
```