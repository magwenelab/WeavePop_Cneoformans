geom_smooth(method = "lm", se = TRUE, color = "blue", linetype = "dashed") +
geom_hline(yintercept =1, color = "black", linetype = "solid")+
geom_hline(yintercept =2, color = "black", linetype = "solid")+
ylim(0,3)+
theme_minimal() +
labs(title = "Median Normalized by Global Mode",
y = "Normalized Depth of Chromosomes",
x = "Chromosome length")
md <- ggplot(depth_by_chrom_new, aes(y = norm_mean_by_median, x = length, color = chromosome))+
geom_point(alpha = 0.05)+
geom_smooth(method = "lm", se = TRUE, color = "blue", linetype = "dashed") +
geom_hline(yintercept =1, color = "black", linetype = "solid")+
geom_hline(yintercept =2, color = "black", linetype = "solid")+
ylim(0,3)+
theme_minimal() +
labs(title = "Mean Normalized by Global Median",
y = "Normalized Depth of Chromosomes",
x = "Chromosome length")
mm <- ggplot(depth_by_chrom_new, aes(y = norm_mean_by_mean, x = length, color = chromosome))+
geom_point(alpha = 0.05)+
geom_smooth(method = "lm", se = TRUE, color = "blue", linetype = "dashed") +
geom_hline(yintercept =1, color = "black", linetype = "solid")+
geom_hline(yintercept =2, color = "black", linetype = "solid")+
ylim(0,3)+
theme_minimal() +
labs(title = "Mean Normalized by Mean",
y = "Normalized Depth of Chromosomes",
x = "Chromosome length")
mo <- ggplot(depth_by_chrom_new, aes(y = norm_mean_by_mode, x = length, color = chromosome))+
geom_point(alpha = 0.05)+
geom_smooth(method = "lm", se = TRUE, color = "blue", linetype = "dashed") +
geom_hline(yintercept =1, color = "black", linetype = "solid")+
geom_hline(yintercept =2, color = "black", linetype = "solid")+
ylim(0,3)+
theme_minimal() +
labs(title = "Mean Normalized by Mode",
y = "Normalized Depth of Chromosomes",
x = "Chromosome length")
#| fig.height: 12
#| fig.width: 12
dd | dm | do
dd | dm | do
md | mm | mo
dd <- ggplot(depth_by_chrom_new, aes(y = norm_median_by_median, x = length, color = chromosome))+
geom_point(alpha = 0.05)+
geom_smooth(method = "lm", se = TRUE, color = "blue", linetype = "dashed") +
geom_hline(yintercept =1, color = "black", linetype = "solid")+
geom_hline(yintercept =2, color = "black", linetype = "solid")+
ylim(0,3)+
theme(legend.position = "none")+
theme_minimal() +
labs(title = "Median Normalized by Global Median",
y = "Normalized Depth of Chromosomes",
x = "Chromosome length")
dm <- ggplot(depth_by_chrom_new, aes(y = norm_median_by_mean, x = length, color = chromosome))+
geom_point(alpha = 0.05)+
geom_smooth(method = "lm", se = TRUE, color = "blue", linetype = "dashed") +
geom_hline(yintercept =1, color = "black", linetype = "solid")+
geom_hline(yintercept =2, color = "black", linetype = "solid")+
ylim(0,3)+
theme(legend.position = "none")+
theme_minimal() +
labs(title = "Median Normalized by Global Mean",
y = "Normalized Depth of Chromosomes",
x = "Chromosome length")
do <- ggplot(depth_by_chrom_new, aes(y = norm_median_by_mode, x = length, color = chromosome))+
geom_point(alpha = 0.05)+
geom_smooth(method = "lm", se = TRUE, color = "blue", linetype = "dashed") +
geom_hline(yintercept =1, color = "black", linetype = "solid")+
geom_hline(yintercept =2, color = "black", linetype = "solid")+
ylim(0,3)+
theme(legend.position = "right")+
theme_minimal() +
labs(title = "Median Normalized by Global Mode",
y = "Normalized Depth of Chromosomes",
x = "Chromosome length")
md <- ggplot(depth_by_chrom_new, aes(y = norm_mean_by_median, x = length, color = chromosome))+
geom_point(alpha = 0.05)+
geom_smooth(method = "lm", se = TRUE, color = "blue", linetype = "dashed") +
geom_hline(yintercept =1, color = "black", linetype = "solid")+
geom_hline(yintercept =2, color = "black", linetype = "solid")+
ylim(0,3)+
theme(legend.position = "none")+
theme_minimal() +
labs(title = "Mean Normalized by Global Median",
y = "Normalized Depth of Chromosomes",
x = "Chromosome length")
mm <- ggplot(depth_by_chrom_new, aes(y = norm_mean_by_mean, x = length, color = chromosome))+
geom_point(alpha = 0.05)+
geom_smooth(method = "lm", se = TRUE, color = "blue", linetype = "dashed") +
geom_hline(yintercept =1, color = "black", linetype = "solid")+
geom_hline(yintercept =2, color = "black", linetype = "solid")+
ylim(0,3)+
theme(legend.position = "none")+
theme_minimal() +
labs(title = "Mean Normalized by Mean",
y = "Normalized Depth of Chromosomes",
x = "Chromosome length")
mo <- ggplot(depth_by_chrom_new, aes(y = norm_mean_by_mode, x = length, color = chromosome))+
geom_point(alpha = 0.05)+
geom_smooth(method = "lm", se = TRUE, color = "blue", linetype = "dashed") +
geom_hline(yintercept =1, color = "black", linetype = "solid")+
geom_hline(yintercept =2, color = "black", linetype = "solid")+
ylim(0,3)+
theme(legend.position = "right")+
theme_minimal() +
labs(title = "Mean Normalized by Mode",
y = "Normalized Depth of Chromosomes",
x = "Chromosome length")
dd | dm | do
dd | dm | do
View(mo)
rm(dm, do,dd, mm, md, mo)
dd <- ggplot(depth_by_chrom_new, aes(y = norm_median_by_median, x = length, color = chromosome))+
geom_point(alpha = 0.05)+
geom_smooth(method = "lm", se = TRUE, color = "blue", linetype = "dashed") +
geom_hline(yintercept =1, color = "black", linetype = "solid")+
geom_hline(yintercept =2, color = "black", linetype = "solid")+
ylim(0,3)+
theme(legend.position = "none")+
theme_minimal() +
labs(title = "Median Normalized by Global Median",
y = "Normalized Depth of Chromosomes",
x = "Chromosome length")
dm <- ggplot(depth_by_chrom_new, aes(y = norm_median_by_mean, x = length, color = chromosome))+
geom_point(alpha = 0.05)+
geom_smooth(method = "lm", se = TRUE, color = "blue", linetype = "dashed") +
geom_hline(yintercept =1, color = "black", linetype = "solid")+
geom_hline(yintercept =2, color = "black", linetype = "solid")+
ylim(0,3)+
theme(legend.position = "none")+
theme_minimal() +
labs(title = "Median Normalized by Global Mean",
y = "Normalized Depth of Chromosomes",
x = "Chromosome length")
do <- ggplot(depth_by_chrom_new, aes(y = norm_median_by_mode, x = length, color = chromosome))+
geom_point(alpha = 0.05)+
geom_smooth(method = "lm", se = TRUE, color = "blue", linetype = "dashed") +
geom_hline(yintercept =1, color = "black", linetype = "solid")+
geom_hline(yintercept =2, color = "black", linetype = "solid")+
ylim(0,3)+
theme(legend.position = "right")+
theme_minimal() +
labs(title = "Median Normalized by Global Mode",
y = "Normalized Depth of Chromosomes",
x = "Chromosome length")
md <- ggplot(depth_by_chrom_new, aes(y = norm_mean_by_median, x = length, color = chromosome))+
geom_point(alpha = 0.05)+
geom_smooth(method = "lm", se = TRUE, color = "blue", linetype = "dashed") +
geom_hline(yintercept =1, color = "black", linetype = "solid")+
geom_hline(yintercept =2, color = "black", linetype = "solid")+
ylim(0,3)+
theme(legend.position = "none")+
theme_minimal() +
labs(title = "Mean Normalized by Global Median",
y = "Normalized Depth of Chromosomes",
x = "Chromosome length")
mm <- ggplot(depth_by_chrom_new, aes(y = norm_mean_by_mean, x = length, color = chromosome))+
geom_point(alpha = 0.05)+
geom_smooth(method = "lm", se = TRUE, color = "blue", linetype = "dashed") +
geom_hline(yintercept =1, color = "black", linetype = "solid")+
geom_hline(yintercept =2, color = "black", linetype = "solid")+
ylim(0,3)+
theme(legend.position = "none")+
theme_minimal() +
labs(title = "Mean Normalized by Mean",
y = "Normalized Depth of Chromosomes",
x = "Chromosome length")
mo <- ggplot(depth_by_chrom_new, aes(y = norm_mean_by_mode, x = length, color = chromosome))+
geom_point(alpha = 0.05)+
geom_smooth(method = "lm", se = TRUE, color = "blue", linetype = "dashed") +
geom_hline(yintercept =1, color = "black", linetype = "solid")+
geom_hline(yintercept =2, color = "black", linetype = "solid")+
ylim(0,3)+
theme(legend.position = "right")+
theme_minimal() +
labs(title = "Mean Normalized by Mode",
y = "Normalized Depth of Chromosomes",
x = "Chromosome length")
dd | dm | do
dd <- ggplot(depth_by_chrom_new, aes(y = norm_median_by_median, x = length, color = chromosome))+
geom_point(alpha = 0.05)+
geom_smooth(method = "lm", se = TRUE, color = "blue", linetype = "dashed") +
geom_hline(yintercept =1, color = "black", linetype = "solid")+
geom_hline(yintercept =2, color = "black", linetype = "solid")+
ylim(0,3)+
theme_minimal() +
theme(legend.position = "none")+
labs(title = "Median Normalized by Global Median",
y = "Normalized Depth of Chromosomes",
x = "Chromosome length")
dm <- ggplot(depth_by_chrom_new, aes(y = norm_median_by_mean, x = length, color = chromosome))+
geom_point(alpha = 0.05)+
geom_smooth(method = "lm", se = TRUE, color = "blue", linetype = "dashed") +
geom_hline(yintercept =1, color = "black", linetype = "solid")+
geom_hline(yintercept =2, color = "black", linetype = "solid")+
ylim(0,3)+
theme_minimal() +
theme(legend.position = "none")+
labs(title = "Median Normalized by Global Mean",
y = "Normalized Depth of Chromosomes",
x = "Chromosome length")
do <- ggplot(depth_by_chrom_new, aes(y = norm_median_by_mode, x = length, color = chromosome))+
geom_point(alpha = 0.05)+
geom_smooth(method = "lm", se = TRUE, color = "blue", linetype = "dashed") +
geom_hline(yintercept =1, color = "black", linetype = "solid")+
geom_hline(yintercept =2, color = "black", linetype = "solid")+
ylim(0,3)+
theme_minimal() +
theme(legend.position = "right")+
labs(title = "Median Normalized by Global Mode",
y = "Normalized Depth of Chromosomes",
x = "Chromosome length")
md <- ggplot(depth_by_chrom_new, aes(y = norm_mean_by_median, x = length, color = chromosome))+
geom_point(alpha = 0.05)+
geom_smooth(method = "lm", se = TRUE, color = "blue", linetype = "dashed") +
geom_hline(yintercept =1, color = "black", linetype = "solid")+
geom_hline(yintercept =2, color = "black", linetype = "solid")+
ylim(0,3)+
theme_minimal() +
theme(legend.position = "none")+
labs(title = "Mean Normalized by Global Median",
y = "Normalized Depth of Chromosomes",
x = "Chromosome length")
mm <- ggplot(depth_by_chrom_new, aes(y = norm_mean_by_mean, x = length, color = chromosome))+
geom_point(alpha = 0.05)+
geom_smooth(method = "lm", se = TRUE, color = "blue", linetype = "dashed") +
geom_hline(yintercept =1, color = "black", linetype = "solid")+
geom_hline(yintercept =2, color = "black", linetype = "solid")+
ylim(0,3)+
theme_minimal() +
theme(legend.position = "none")+
labs(title = "Mean Normalized by Mean",
y = "Normalized Depth of Chromosomes",
x = "Chromosome length")
mo <- ggplot(depth_by_chrom_new, aes(y = norm_mean_by_mode, x = length, color = chromosome))+
geom_point(alpha = 0.05)+
geom_smooth(method = "lm", se = TRUE, color = "blue", linetype = "dashed") +
geom_hline(yintercept =1, color = "black", linetype = "solid")+
geom_hline(yintercept =2, color = "black", linetype = "solid")+
ylim(0,3)+
theme_minimal() +
theme(legend.position = "right")+
labs(title = "Mean Normalized by Mode",
y = "Normalized Depth of Chromosomes",
x = "Chromosome length")
dd | dm | do
md | mm | mo
library(tidyverse)
library(ggrepel)
install.packages("ggrepel")
library(tidyverse)
library(ggrepel)
library(patchwork)
library(ggExtra)
getwd()
setwd("/home/czirion/Documents/git_magwenelab/WeavePop_Cneoformans/analyses/")
chrom_metrics_path <- "data/provisional/chrom_metrics.tsv" # or "results/tables/chrom_metrics_filtered.tsv"
ploidy_path <- "data/provisional/ploidy_from_plots.tsv"
ploidy <- read.delim(
ploidy_path,
header = TRUE,
sep = "\t",
stringsAsFactors = FALSE)%>%
select(sample, strain, lineage,
accession, chromosome, ploidy,
distribution_pattern, fraction_duplications,
steps, smile, uniform)%>%
distinct()
ploidy$ploidy <- factor(ploidy$ploidy, levels = c("haploid", "diploid", "triploid", "tetraploid"))
chrom_metrics <- read.delim(
chrom_metrics_path,
header = TRUE,
sep = "\t",
stringsAsFactors = FALSE
)
chrom_metrics <- left_join(chrom_metrics, ploidy, by = c("sample", "strain", "lineage", "accession", "chromosome"))
#| code-fold: false
size_threshold <- 20
depth_threshold <- 1.4
chrom_metrics <- chrom_metrics %>%
mutate(filters = case_when(
dup_coverage_percent > size_threshold & norm_chrom_median > depth_threshold ~ "high_depth_covered",
dup_coverage_percent > size_threshold & norm_chrom_median <= depth_threshold ~ "low_depth_covered",
dup_coverage_percent <= size_threshold & norm_chrom_median > depth_threshold ~ "high_depth_not_covered",
dup_coverage_percent <= size_threshold & norm_chrom_median <= depth_threshold ~ "low_depth_not_covered"))
ploidy_summary <- ploidy %>%
group_by(ploidy) %>%
summarise(n_samples = n_distinct(sample)) %>%
arrange(desc(n_samples))
ploidy_summary
med <- ggplot(chrom_metrics, aes(x = dup_coverage_percent, y = norm_chrom_median, color = filters)) +
geom_hline(yintercept = c(1, 2), color = "black", linetype = "solid") +
geom_hline(yintercept = depth_threshold, color = "red", linetype = "dashed") +
geom_vline(xintercept = size_threshold, color = "red", linetype = "dashed") +
geom_point() +
scale_color_brewer(name = "Filters category", palette = "Dark2") +
scale_x_continuous(limits = c(0,100))+
theme_minimal() +
theme(legend.position = "bottom") +
labs(title = "Percent of Chromosome Covered by dupCNVs vs. Depth of Chromosome",
y = "Normalized Median Depth of Chromosome",
x = "Percent of Chromosome Covered by dupCNVs")
p <- ggMarginal(
med,
type = "boxplot",
margins = "both",
size = 5,
groupColour = TRUE,
groupFill = TRUE
)
p
med <- ggplot(chrom_metrics, aes(x = dup_coverage_percent, y = norm_chrom_median, color = ploidy)) +
geom_hline(yintercept = c(1, 2), color = "black", linetype = "solid") +
geom_hline(yintercept = depth_threshold, color = "red", linetype = "dashed") +
geom_vline(xintercept = size_threshold, color = "red", linetype = "dashed") +
geom_point() +
scale_color_brewer(name = "Ploidy", palette = "Set1") +
scale_x_continuous(limits = c(0,100))+
theme_minimal() +
theme(legend.position = "bottom") +
labs(title = "Percent of Chromosome Covered by dupCNVs vs. Depth of Chromosome",
y = "Normalized Median Depth of Chromosome",
x = "Percent of Chromosome Covered by dupCNVs")
p1 <- ggMarginal(
med,
type = "boxplot",
margins = "both",
size = 5,
groupColour = TRUE,
groupFill = TRUE
)
p1
mea <- ggplot(chrom_metrics, aes(x = dup_coverage_percent, y = norm_chrom_mean, color = filters)) +
geom_hline(yintercept = c(1, 2), color = "black", linetype = "solid") +
geom_hline(yintercept = depth_threshold, color = "red", linetype = "dashed") +
geom_vline(xintercept = size_threshold, color = "red", linetype = "dashed") +
geom_point() +
scale_color_brewer(name = "Filters category", palette = "Dark2") +
scale_x_continuous(limits = c(0,100))+
theme_minimal() +
theme(legend.position = "bottom") +
labs(title = "Percent of Chromosome Covered by dupCNVs vs. Depth of Chromosome",
y = "Normalized Mean Depth of Chromosome",
x = "Percent of Chromosome Covered by dupCNVs")
r <- ggMarginal(
mea,
type = "boxplot",
margins = "both",
size = 5,
groupColour = TRUE,
groupFill = TRUE
)
r
#| code-fold: false
size_threshold <- 50
depth_threshold <- 1.6
chrom_metrics <- chrom_metrics %>%
select(-filters)%>%
mutate(filters = case_when(
dup_coverage_percent > size_threshold & norm_chrom_median > depth_threshold ~ "high_depth_covered",
dup_coverage_percent > size_threshold & norm_chrom_median <= depth_threshold ~ "low_depth_covered",
dup_coverage_percent <= size_threshold & norm_chrom_median > depth_threshold ~ "high_depth_not_covered",
dup_coverage_percent <= size_threshold & norm_chrom_median <= depth_threshold ~ "low_depth_not_covered"))
dup_chroms <- chrom_metrics %>%
filter(dup_coverage_percent > size_threshold | norm_chrom_median > depth_threshold)
pl <- ggplot(dup_chroms,aes(x = dup_coverage_percent, y = norm_chrom_median, color = ploidy)) +
geom_hline(yintercept = c(1, 2), color = "black", linetype = "solid") +
geom_hline(yintercept = depth_threshold, color = "red", linetype = "dashed") +
geom_vline(xintercept = size_threshold, color = "red", linetype = "dashed") +
geom_point() +
scale_color_brewer(name = "Ploidy", palette = "Set1") +
scale_x_continuous(limits = c(0,100))+
theme_minimal() +
theme(legend.position = "bottom") +
labs(title = "Percent of Chromosome Covered by dupCNVs vs. Depth of Chromosome",
y = "Normalized Median Depth of Chromosome",
x = "Percent of Chromosome Covered by dupCNVs")
t<-ggMarginal(
pl,
type = "boxplot",
margins = "both",
size = 5,
groupColour = TRUE,
groupFill = TRUE
)
t
ggplot(dup_chroms,aes(x = dup_coverage_percent, y = norm_chrom_median, color = ploidy)) +
geom_hline(yintercept = c(1, 2), color = "black", linetype = "solid") +
geom_hline(yintercept = depth_threshold, color = "red", linetype = "dashed") +
geom_vline(xintercept = size_threshold, color = "red", linetype = "dashed") +
geom_point() +
facet_wrap(~ploidy)+
geom_text_repel(aes(label = paste(sample, chromosome)), size = 3, max.overlaps = 5) +
scale_color_brewer(name = "Ploidy", palette = "Set1") +
scale_x_continuous(limits = c(0,100))+
theme_minimal() +
theme(legend.position = "right") +
labs(title = "Percent of Chromosome Covered by dupCNVs vs. Depth of Chromosome",
y = "Normalized Median Depth of Chromosome",
x = "Percent of Chromosome Covered by dupCNVs")
ggplot(dup_chroms,aes(x = dup_coverage_percent, y = norm_chrom_median,
color = distribution_pattern, shape = ploidy)) +
geom_hline(yintercept = c(1, 2), color = "black", linetype = "solid") +
geom_hline(yintercept = depth_threshold, color = "red", linetype = "dashed") +
geom_vline(xintercept = size_threshold, color = "red", linetype = "dashed") +
geom_point() +
scale_color_brewer(name = "Distribution Pattern", palette = "Set2") +
geom_text_repel(aes(label = paste(sample, chromosome)), size = 3, max.overlaps = 5) +
scale_x_continuous(limits = c(0,100))+
theme_minimal() +
theme(legend.position = "right") +
labs(title = "Percent of Chromosome Covered by dupCNVs vs. Depth of Chromosome",
y = "Normalized Median Depth of Chromosome",
x = "Percent of Chromosome Covered by dupCNVs")
ggplot(dup_chroms,aes(x = length, y = norm_chrom_median, shape = ploidy, color = distribution_pattern)) +
geom_point() +
scale_color_brewer(name = "Distribution Pattern", palette = "Set2") +
theme_minimal() +
theme(legend.position = "right") +
labs(title = "Percent of Chromosome Covered by dupCNVs vs. Depth of Chromosome",
y = "Normalized Median Depth of Chromosome",
x = "Percent of Chromosome Covered by dupCNVs")
#| fig.height: 7
#| fig.width: 9
ggplot(dup_chroms, aes(x = dup_coverage_percent, color = norm_chrom_median, y = dup_span_percent, size= n_cnvs )) +
geom_point() +
scale_x_continuous(labels = scales::comma, limits = c(0,100)) +
scale_y_continuous(labels = scales::comma, limits = c(0,100)) +
scale_size_continuous(name = "Number of CNVs", limits = c(1,max(dup_chroms$n_cnvs, na.rm = TRUE)) )+
geom_abline(slope = 1, intercept = 0, linetype = "solid", color = "lightgray") +
scale_color_viridis_c(name = "Normalized Median\nDepth of Chromosome", direction = -1) +
theme_minimal() +
theme(legend.position = "right")+
labs(title = "Percent of Chromosome Spanned by dupCNVs vs Covered by dupCNVs",
y = "Percent of Chromosome Spanned by dupCNVs",
x = "Percent of Chromosome Covered by dupCNVs")
#| fig.height: 7
#| fig.width: 9
ggplot(dup_chroms, aes(x = dup_coverage_percent, color = ploidy, y = dup_span_percent, size= n_cnvs )) +
geom_point() +
scale_x_continuous(labels = scales::comma, limits = c(0,100)) +
scale_y_continuous(labels = scales::comma, limits = c(0,100)) +
scale_size_continuous(name = "Number of CNVs", limits = c(1,max(dup_chroms$n_cnvs, na.rm = TRUE)) )+
geom_abline(slope = 1, intercept = 0, linetype = "solid", color = "lightgray") +
scale_color_brewer(name = "Ploidy", palette = "Set1") +
theme_minimal() +
theme(legend.position = "right")+
labs(title = "Percent of Chromosome Spanned by dupCNVs vs Covered by dupCNVs",
y = "Percent of Chromosome Spanned by dupCNVs",
x = "Percent of Chromosome Covered by dupCNVs")
#| fig.height: 7
#| fig.width: 9
ggplot(dup_chroms, aes(x = dup_coverage_percent, color = filters, y = dup_span_percent, size= n_cnvs )) +
geom_point() +
scale_x_continuous(labels = scales::comma, limits = c(0,100)) +
scale_y_continuous(labels = scales::comma, limits = c(0,100)) +
scale_size_continuous(name = "Number of CNVs", limits = c(1,max(dup_chroms$n_cnvs, na.rm = TRUE)) )+
geom_abline(slope = 1, intercept = 0, linetype = "solid", color = "lightgray") +
scale_color_brewer(name = "Filters category", palette = "Dark2") +
facet_wrap(~ploidy)+
geom_text_repel(aes(label = paste(sample, chromosome)), size = 3, max.overlaps = 10) +
theme_minimal() +
theme(legend.position = "right")+
labs(title = "Percent of Chromosome Spanned by dupCNVs vs Covered by dupCNVs",
y = "Percent of Chromosome Spanned by dupCNVs",
x = "Percent of Chromosome Covered by dupCNVs")
dup_chroms <- dup_chroms %>%
mutate(diff_span_cov = abs(dup_span_percent - dup_coverage_percent))
#| code-fold: false
difference_threshold = 10
coverage_threshold = 83
#| fig.height: 7
#| fig.width: 9
ggplot(dup_chroms, aes(x = diff_span_cov, y = dup_coverage_percent, color = filters, size = n_cnvs, shape = ploidy)) +
geom_point() +
geom_text_repel(aes(label = sample), size = 3, max.overlaps = 5) +
geom_vline(xintercept = difference_threshold, linetype = "dashed", color = "red") +
geom_hline(yintercept = coverage_threshold, linetype = "dashed", color = "red") +
geom_hline(yintercept = size_threshold, linetype = "dashed", color = "blue") +
scale_x_continuous(labels = scales::comma, breaks = seq(0, max(dup_chroms$diff_span_cov, na.rm = TRUE), by = 5)) +
scale_y_continuous(labels = scales::comma, breaks = seq(0, max(dup_chroms$dup_coverage_percent, na.rm = TRUE), by = 5)) +
scale_size_continuous(name = "Number of\nCNVs")+
scale_color_brewer(name = "Filters category", palette = "Dark2") +
theme_minimal() +
theme(legend.position = "right")+
labs(title = "",
y = "Percent of Chromosome\nCovered by Duplications",
x = "Difference Span-Coverage")
dup_chroms <- dup_chroms %>%
mutate(category = case_when(
diff_span_cov <= difference_threshold & dup_coverage_percent >= coverage_threshold ~ "not_gappy_full",
diff_span_cov <= difference_threshold & dup_coverage_percent < coverage_threshold ~ "not_gappy_partial",
diff_span_cov > difference_threshold & dup_coverage_percent >= coverage_threshold ~ "gappy_full",
diff_span_cov > difference_threshold & dup_coverage_percent < coverage_threshold ~ "gappy_partial"
))
dup_chroms %>%
group_by(category, filters, ploidy)%>%
summarize(n = n())%>%
arrange(ploidy, filters, category)
ggplot(dup_chroms, aes(x = filters, y = category, color = ploidy)) +
geom_jitter(width = 0.3, height = 0.3, alpha = 0.5) +  # Adds jitter to avoid overlapping points
scale_color_brewer(name = "Ploidy", palette = "Set1") +
theme_minimal() +
theme(legend.position = "right") +
labs(title = "Intersection of Filters and Category Colored by Ploidy",
x = "Filters",
y = "Category")
not_gappy_full <- filter(dup_chroms, category == "not_gappy_full")
not_gappy_partial <- filter(dup_chroms, category == "not_gappy_partial")
gappy_full <- filter(dup_chroms, category == "gappy_full")
gappy_partial <- filter(dup_chroms, category == "gappy_partial")
